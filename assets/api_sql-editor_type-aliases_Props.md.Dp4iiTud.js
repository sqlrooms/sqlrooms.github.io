import{_ as t,c as o,o as a,ag as d}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"Type Alias: Props","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/sql-editor/type-aliases/Props.html"}]]},"headers":[],"relativePath":"api/sql-editor/type-aliases/Props.md","filePath":"api/sql-editor/type-aliases/Props.md"}'),r={name:"api/sql-editor/type-aliases/Props.md"};function s(i,e,l,c,n,p){return a(),o("div",null,[...e[0]||(e[0]=[d('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/sql-editor/type-aliases/Props.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/sql-editor</a> / Props</p><h1 id="type-alias-props" tabindex="-1">Type Alias: Props <a class="header-anchor" href="#type-alias-props" aria-label="Permalink to &quot;Type Alias: Props&quot;">​</a></h1><blockquote><p><strong>Props</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a id="schema"></a> <code>schema</code>?</td><td><a href="./../interfaces/TableStructurePanelProps.html"><code>TableStructurePanelProps</code></a>[<code>&quot;schema&quot;</code>]</td><td>The database schema to use. Defaults to &#39;<em>&#39;. If &#39;</em>&#39; is provided, all tables will be shown. If a function is provided, it will be used to filter the tables.</td></tr><tr><td><a id="isopen"></a> <code>isOpen</code></td><td><code>boolean</code></td><td>Whether the SQL editor is currently visible</td></tr><tr><td><a id="documentationpanel"></a> <code>documentationPanel</code>?</td><td><code>React.ReactNode</code></td><td>Optional component to render SQL documentation in the side panel</td></tr><tr><td><a id="queryresultprops"></a> <code>queryResultProps</code>?</td><td><code>Pick</code>&lt;<code>React.ComponentProps</code>&lt;<em>typeof</em> <a href="./../functions/QueryResultPanel.html"><code>QueryResultPanel</code></a>&gt;, <code>&quot;onRowClick&quot;</code> | <code>&quot;onRowDoubleClick&quot;</code>&gt;</td><td>Props forwarded to <code>QueryResultPanel</code> to configure result behavior. This provides a single entry point for table interactions.</td></tr><tr><td><a id="onclose"></a> <code>onClose</code></td><td>() =&gt; <code>void</code></td><td>Callback fired when the SQL editor should be closed</td></tr></tbody></table>',6)])])}const m=t(r,[["render",s]]);export{h as __pageData,m as default};
