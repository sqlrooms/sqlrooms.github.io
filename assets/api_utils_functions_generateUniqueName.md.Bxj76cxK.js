import{_ as a,c as t,o as i,ag as n}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"Function: generateUniqueName()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/utils/functions/generateUniqueName.html"}]]},"headers":[],"relativePath":"api/utils/functions/generateUniqueName.md","filePath":"api/utils/functions/generateUniqueName.md"}'),s={name:"api/utils/functions/generateUniqueName.md"};function r(o,e,l,d,h,u){return i(),t("div",null,[...e[0]||(e[0]=[n(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/utils/functions/generateUniqueName.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/utils</a> / generateUniqueName</p><h1 id="function-generateuniquename" tabindex="-1">Function: generateUniqueName() <a class="header-anchor" href="#function-generateuniquename" aria-label="Permalink to &quot;Function: generateUniqueName()&quot;">​</a></h1><blockquote><p><strong>generateUniqueName</strong>(<code>name</code>, <code>usedNames</code>?): <code>string</code></p></blockquote><p>Generates a unique name by appending a numeric suffix if the name already exists.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td><code>string</code></td><td>The base name to make unique</td></tr><tr><td><code>usedNames</code>?</td><td><code>string</code>[]</td><td>Optional array of existing names to check against</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>A unique name, potentially with a numeric suffix</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateUniqueName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns &quot;table_1&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateUniqueName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;table_1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;table_1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns &quot;table_2&quot;</span></span></code></pre></div>`,12)])])}const m=a(s,[["render",r]]);export{c as __pageData,m as default};
