import{_ as e,c as a,o as s,ag as i}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Function: truncate()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/utils/functions/truncate.html"}]]},"headers":[],"relativePath":"api/utils/functions/truncate.md","filePath":"api/utils/functions/truncate.md"}'),n={name:"api/utils/functions/truncate.md"};function r(o,t,d,h,l,c){return s(),a("div",null,[...t[0]||(t[0]=[i(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/utils/functions/truncate.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/utils</a> / truncate</p><h1 id="function-truncate" tabindex="-1">Function: truncate() <a class="header-anchor" href="#function-truncate" aria-label="Permalink to &quot;Function: truncate()&quot;">​</a></h1><blockquote><p><strong>truncate</strong>(<code>text</code>, <code>maxWords</code>): <code>string</code></p></blockquote><p>Truncates text to a specified word limit</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Default value</th><th>Description</th></tr></thead><tbody><tr><td><code>text</code></td><td><code>string</code></td><td><code>undefined</code></td><td>The text to truncate</td></tr><tr><td><code>maxWords</code></td><td><code>number</code></td><td><code>10</code></td><td>The maximum number of words to keep (default: 10)</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>The truncated text with &quot;...&quot; appended if truncated</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a very long sentence that should be truncated&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns &quot;This is a very long...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Short text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns &quot;Short text&quot;</span></span></code></pre></div>`,12)])])}const k=e(n,[["render",r]]);export{p as __pageData,k as default};
