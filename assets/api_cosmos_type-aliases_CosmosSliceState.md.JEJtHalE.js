import{_ as o,c as t,o as a,ag as d}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"Type Alias: CosmosSliceState","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/cosmos/type-aliases/CosmosSliceState.html"}]]},"headers":[],"relativePath":"api/cosmos/type-aliases/CosmosSliceState.md","filePath":"api/cosmos/type-aliases/CosmosSliceState.md"}'),c={name:"api/cosmos/type-aliases/CosmosSliceState.md"};function s(i,e,l,r,n,p){return a(),t("div",null,[...e[0]||(e[0]=[d('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/cosmos/type-aliases/CosmosSliceState.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/cosmos</a> / CosmosSliceState</p><h1 id="type-alias-cosmosslicestate" tabindex="-1">Type Alias: CosmosSliceState <a class="header-anchor" href="#type-alias-cosmosslicestate" aria-label="Permalink to &quot;Type Alias: CosmosSliceState&quot;">​</a></h1><blockquote><p><strong>CosmosSliceState</strong>: <code>object</code></p></blockquote><p>Core state interface for the Cosmos graph visualization. Contains the graph instance, simulation state, and all control functions.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="cosmos"></a> <code>cosmos</code></td><td>{ <code>graph</code>: <code>Graph</code> | <code>null</code>; <code>isSimulationRunning</code>: <code>boolean</code>; <code>createGraph</code>: (<code>container</code>) =&gt; <code>void</code>; <code>toggleSimulation</code>: () =&gt; <code>void</code>; <code>fitView</code>: () =&gt; <code>void</code>; <code>startWithEnergy</code>: () =&gt; <code>void</code>; <code>destroyGraph</code>: () =&gt; <code>void</code>; <code>updateSimulationConfig</code>: (<code>config</code>) =&gt; <code>void</code>; <code>updateGraphConfig</code>: (<code>config</code>) =&gt; <code>void</code>; <code>updateGraphData</code>: (<code>data</code>) =&gt; <code>void</code>; <code>setFocusedPoint</code>: (<code>index</code>) =&gt; <code>void</code>; <code>setZoomLevel</code>: (<code>level</code>) =&gt; <code>void</code>; }</td></tr></tbody></table>',7)])])}const S=o(c,[["render",s]]);export{h as __pageData,S as default};
