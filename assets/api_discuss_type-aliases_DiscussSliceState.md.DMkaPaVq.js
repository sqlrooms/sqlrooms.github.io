import{_ as d,c as o,o as c,ag as t}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Type Alias: DiscussSliceState","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/discuss/type-aliases/DiscussSliceState.html"}]]},"headers":[],"relativePath":"api/discuss/type-aliases/DiscussSliceState.md","filePath":"api/discuss/type-aliases/DiscussSliceState.md"}'),i={name:"api/discuss/type-aliases/DiscussSliceState.md"};function s(a,e,n,l,r,u){return c(),o("div",null,[...e[0]||(e[0]=[t('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/discuss/type-aliases/DiscussSliceState.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/discuss</a> / DiscussSliceState</p><h1 id="type-alias-discussslicestate" tabindex="-1">Type Alias: DiscussSliceState <a class="header-anchor" href="#type-alias-discussslicestate" aria-label="Permalink to &quot;Type Alias: DiscussSliceState&quot;">​</a></h1><blockquote><p><strong>DiscussSliceState</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="discuss"></a> <code>discuss</code></td><td>{ <code>userId</code>: <code>string</code>; <code>config</code>: <a href="./DiscussSliceConfig.html"><code>DiscussSliceConfig</code></a>; <code>submitEdit</code>: (<code>text</code>) =&gt; <code>void</code>; <code>replyToItem</code>: <code>ReplyToItem</code> | <code>undefined</code>; <code>setReplyToItem</code>: (<code>replyToItem</code>) =&gt; <code>void</code>; <code>editingItem</code>: <code>EditingItem</code> | <code>undefined</code>; <code>setEditingItem</code>: (<code>editingItem</code>) =&gt; <code>void</code>; <code>itemToDelete</code>: <code>DeleteItem</code> | <code>undefined</code>; <code>setItemToDelete</code>: (<code>item</code>) =&gt; <code>void</code>; <code>highlightedDiscussionId</code>: <code>string</code> | <code>undefined</code>; <code>setHighlightedDiscussionId</code>: (<code>discussionId</code>) =&gt; <code>void</code>; <code>handleDeleteConfirm</code>: () =&gt; <code>void</code>; <code>setConfig</code>: (<code>config</code>) =&gt; <code>void</code>; <code>getReplyToUserId</code>: () =&gt; <code>string</code>; <code>getEditingItemText</code>: () =&gt; <code>string</code>; <code>addDiscussion</code>: (<code>text</code>, <code>anchorId</code>?) =&gt; <code>void</code>; <code>editDiscussion</code>: (<code>id</code>, <code>text</code>) =&gt; <code>void</code>; <code>removeDiscussion</code>: (<code>id</code>) =&gt; <code>void</code>; <code>addComment</code>: (<code>discussionId</code>, <code>text</code>, <code>parentId</code>?) =&gt; <code>void</code>; <code>editComment</code>: (<code>discussionId</code>, <code>commentId</code>, <code>text</code>) =&gt; <code>void</code>; <code>removeComment</code>: (<code>discussionId</code>, <code>commentId</code>) =&gt; <code>void</code>; }</td></tr></tbody></table>',6)])])}const g=d(i,[["render",s]]);export{p as __pageData,g as default};
