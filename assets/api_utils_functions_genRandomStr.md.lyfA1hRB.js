import{_ as e,c as a,o as n,ag as s}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Function: genRandomStr()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/utils/functions/genRandomStr.html"}]]},"headers":[],"relativePath":"api/utils/functions/genRandomStr.md","filePath":"api/utils/functions/genRandomStr.md"}'),i={name:"api/utils/functions/genRandomStr.md"};function r(o,t,d,l,h,p){return n(),a("div",null,[...t[0]||(t[0]=[s('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/utils/functions/genRandomStr.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/utils</a> / genRandomStr</p><h1 id="function-genrandomstr" tabindex="-1">Function: genRandomStr() <a class="header-anchor" href="#function-genrandomstr" aria-label="Permalink to &quot;Function: genRandomStr()&quot;">​</a></h1><blockquote><p><strong>genRandomStr</strong>(<code>length</code>, <code>seed</code>?): <code>string</code></p></blockquote><p>Generates a random string of specified length with optional seed</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>length</code></td><td><code>number</code></td><td>The length of the random string to generate</td></tr><tr><td><code>seed</code>?</td><td><code>string</code></td><td>Seed will be ignored.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>Random string containing uppercase letters, lowercase letters, and numbers</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> random</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> genRandomStr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g., &quot;aB3kF9mN2x&quot;</span></span></code></pre></div>',12)])])}const u=e(i,[["render",r]]);export{m as __pageData,u as default};
