import{_ as t,c as o,o as a,ag as r}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Interface: QueryResultPanelProps","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/sql-editor/interfaces/QueryResultPanelProps.html"}]]},"headers":[],"relativePath":"api/sql-editor/interfaces/QueryResultPanelProps.md","filePath":"api/sql-editor/interfaces/QueryResultPanelProps.md"}'),d={name:"api/sql-editor/interfaces/QueryResultPanelProps.md"};function c(n,e,s,l,i,h){return a(),o("div",null,[...e[0]||(e[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/sql-editor/interfaces/QueryResultPanelProps.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/sql-editor</a> / QueryResultPanelProps</p><h1 id="interface-queryresultpanelprops" tabindex="-1">Interface: QueryResultPanelProps <a class="header-anchor" href="#interface-queryresultpanelprops" aria-label="Permalink to &quot;Interface: QueryResultPanelProps&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="classname" tabindex="-1">className? <a class="header-anchor" href="#classname" aria-label="Permalink to &quot;className?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>className</strong>: <code>string</code></p></blockquote><p>Custom class name for styling</p><hr><h3 id="renderactions" tabindex="-1">renderActions()? <a class="header-anchor" href="#renderactions" aria-label="Permalink to &quot;renderActions()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>renderActions</strong>: (<code>query</code>) =&gt; <code>ReactNode</code></p></blockquote><p>Custom actions to render in the query result panel</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>query</code></td><td><code>string</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>ReactNode</code></p><hr><h3 id="fontsize" tabindex="-1">fontSize? <a class="header-anchor" href="#fontsize" aria-label="Permalink to &quot;fontSize?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>fontSize</strong>: <code>string</code></p></blockquote><p>Custom font size for the table e.g. text-xs, text-sm, text-md, text-lg, text-base</p><hr><h3 id="onrowclick" tabindex="-1">onRowClick()? <a class="header-anchor" href="#onrowclick" aria-label="Permalink to &quot;onRowClick()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onRowClick</strong>: (<code>args</code>) =&gt; <code>void</code></p></blockquote><p>Called when a row in the results table is clicked.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>args</code></td><td>{ <code>row</code>: <code>Row</code>&lt;<code>any</code>&gt;; <code>event</code>: <code>MouseEvent</code>&lt;<code>HTMLTableRowElement</code>&gt;; }</td></tr><tr><td><code>args.row</code></td><td><code>Row</code>&lt;<code>any</code>&gt;</td></tr><tr><td><code>args.event</code></td><td><code>MouseEvent</code>&lt;<code>HTMLTableRowElement</code>&gt;</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="onrowdoubleclick" tabindex="-1">onRowDoubleClick()? <a class="header-anchor" href="#onrowdoubleclick" aria-label="Permalink to &quot;onRowDoubleClick()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onRowDoubleClick</strong>: (<code>args</code>) =&gt; <code>void</code></p></blockquote><p>Called when a row in the results table is double-clicked.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>args</code></td><td>{ <code>row</code>: <code>Row</code>&lt;<code>any</code>&gt;; <code>event</code>: <code>MouseEvent</code>&lt;<code>HTMLTableRowElement</code>&gt;; }</td></tr><tr><td><code>args.row</code></td><td><code>Row</code>&lt;<code>any</code>&gt;</td></tr><tr><td><code>args.event</code></td><td><code>MouseEvent</code>&lt;<code>HTMLTableRowElement</code>&gt;</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',35)])])}const b=t(d,[["render",c]]);export{p as __pageData,b as default};
