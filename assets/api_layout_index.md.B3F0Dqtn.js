import{_ as i,c as s,o as e,ag as t}from"./chunks/framework.B-XtCDNB.js";const d=JSON.parse('{"title":"@sqlrooms/layout","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/layout/"}]]},"headers":[],"relativePath":"api/layout/index.md","filePath":"api/layout/index.md"}'),n={name:"api/layout/index.md"};function l(o,a,h,r,p,k){return e(),s("div",null,[...a[0]||(a[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/layout.md for this page in Markdown format</div><h1 id="sqlrooms-layout" tabindex="-1">@sqlrooms/layout <a class="header-anchor" href="#sqlrooms-layout" aria-label="Permalink to &quot;@sqlrooms/layout&quot;">​</a></h1><p>This package is part of the SQLRooms framework and provides flexible layout components for building complex, resizable, and draggable interfaces.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The <code>@sqlrooms/layout</code> package offers a set of components and utilities for creating dynamic, multi-pane layouts in SQLRooms applications. It&#39;s primarily built around the <a href="https://nomcopter.github.io/react-mosaic/" target="_blank" rel="noreferrer">react-mosaic</a> library, which provides a powerful windowing system similar to the one found in advanced IDEs.</p><blockquote><p><strong>Note:</strong> This package uses <a href="https://nomcopter.github.io/react-mosaic/" target="_blank" rel="noreferrer">react-mosaic</a> which should not be confused with <a href="https://github.com/uwdata/mosaic" target="_blank" rel="noreferrer">uwdata/mosaic</a> used in the <a href="/api/mosaic/"><code>@sqlrooms/mosaic</code></a> package for data visualization purposes.</p></blockquote><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @sqlrooms/layout</span></span></code></pre></div><h2 id="mosaic-tree-structure" tabindex="-1">Mosaic Tree Structure <a class="header-anchor" href="#mosaic-tree-structure" aria-label="Permalink to &quot;Mosaic Tree Structure&quot;">​</a></h2><p>The mosaic layout is defined by a tree structure where each node is either a string (representing a panel ID) or an object with <code>direction</code>, <code>first</code>, <code>second</code>, and optional <code>splitPercentage</code> properties. Here&#39;s an example of how a mosaic tree might look:</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Simple two-panel layout with 30/70 split</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> simpleMosaicTree</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  direction: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;row&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  first: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data-sources&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Left panel (30% width)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  second: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;main&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Right panel (70% width)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  splitPercentage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// More complex nested layout</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complexMosaicTree</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  direction: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;row&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  first: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data-sources&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Left panel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  second: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Right side contains a nested layout</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    direction: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;column&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    first: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;main&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Top panel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    second: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Bottom contains another nested layout</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      direction: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;row&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      first: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sql-editor&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      second: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;visualization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      splitPercentage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    splitPercentage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  splitPercentage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h2><h3 id="mosaiclayout" tabindex="-1">MosaicLayout <a class="header-anchor" href="#mosaiclayout" aria-label="Permalink to &quot;MosaicLayout&quot;">​</a></h3><p>A wrapper around the <code>Mosaic</code> component from react-mosaic-component that provides a customized look and feel consistent with SQLRooms styling.</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {MosaicLayout} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sqlrooms/layout&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Example usage</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MosaicLayout</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  renderTile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourTileContent</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{id} /&gt;}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{yourMosaicTree}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{handleLayoutChange}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;;</span></span></code></pre></div><h3 id="mosaictile" tabindex="-1">MosaicTile <a class="header-anchor" href="#mosaictile" aria-label="Permalink to &quot;MosaicTile&quot;">​</a></h3><p>A component for rendering individual tiles within the mosaic layout.</p><h2 id="utility-functions" tabindex="-1">Utility Functions <a class="header-anchor" href="#utility-functions" aria-label="Permalink to &quot;Utility Functions&quot;">​</a></h2><p>The package provides several utility functions for working with mosaic layouts:</p><ul><li><code>makeMosaicStack</code>: Creates a stack of mosaic nodes with specified weights and direction</li><li><code>visitMosaicLeafNodes</code>: Traverses all leaf nodes in a mosaic tree</li><li><code>getVisibleMosaicLayoutPanels</code>: Gets an array of all visible panel IDs</li><li><code>findMosaicNodePathByKey</code>: Finds the path to a specific node by its key</li><li><code>removeMosaicNodeByKey</code>: Removes a node from the mosaic tree by its key</li></ul><h2 id="learn-more" tabindex="-1">Learn More <a class="header-anchor" href="#learn-more" aria-label="Permalink to &quot;Learn More&quot;">​</a></h2><p>For more information about the underlying react-mosaic library, visit:</p><ul><li><a href="https://nomcopter.github.io/react-mosaic/" target="_blank" rel="noreferrer">react-mosaic documentation</a></li><li><a href="https://github.com/nomcopter/react-mosaic" target="_blank" rel="noreferrer">react-mosaic GitHub repository</a></li></ul><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>MIT</p><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><ul><li><a href="./type-aliases/LayoutTypes.html">LayoutTypes</a></li><li><a href="./type-aliases/MosaicLayoutDirection.html">MosaicLayoutDirection</a></li><li><a href="./type-aliases/MosaicLayoutParent.html">MosaicLayoutParent</a></li><li><a href="./type-aliases/MosaicLayoutNodeKey.html">MosaicLayoutNodeKey</a></li><li><a href="./type-aliases/MosaicLayoutNode.html">MosaicLayoutNode</a></li><li><a href="./type-aliases/MosaicLayoutConfig.html">MosaicLayoutConfig</a></li><li><a href="./type-aliases/LayoutConfig.html">LayoutConfig</a></li><li><a href="./type-aliases/RoomPanelInfo.html">RoomPanelInfo</a></li><li><a href="./type-aliases/LayoutSliceConfig.html">LayoutSliceConfig</a></li><li><a href="./type-aliases/LayoutSliceState.html">LayoutSliceState</a></li></ul><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><ul><li><a href="./variables/MAIN_VIEW.html">MAIN_VIEW</a></li><li><a href="./variables/LayoutTypes.html">LayoutTypes</a></li><li><a href="./variables/DEFAULT_MOSAIC_LAYOUT.html"><s>DEFAULT_MOSAIC_LAYOUT</s></a></li><li><a href="./variables/MosaicLayoutDirection.html">MosaicLayoutDirection</a></li><li><a href="./variables/MosaicLayoutParent.html">MosaicLayoutParent</a></li><li><a href="./variables/MosaicLayoutNodeKey.html">MosaicLayoutNodeKey</a></li><li><a href="./variables/MosaicLayoutNode.html">MosaicLayoutNode</a></li><li><a href="./variables/MosaicLayoutConfig.html">MosaicLayoutConfig</a></li><li><a href="./variables/LayoutConfig.html">LayoutConfig</a></li><li><a href="./variables/LayoutSliceConfig.html">LayoutSliceConfig</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><ul><li><a href="./functions/createDefaultMosaicLayout.html">createDefaultMosaicLayout</a></li><li><a href="./functions/isMosaicLayoutParent.html">isMosaicLayoutParent</a></li><li><a href="./functions/createDefaultLayoutConfig.html">createDefaultLayoutConfig</a></li><li><a href="./functions/createLayoutSlice.html">createLayoutSlice</a></li><li><a href="./functions/useStoreWithLayout.html">useStoreWithLayout</a></li><li><a href="./functions/MosaicLayout.html">MosaicLayout</a></li><li><a href="./functions/makeMosaicStack.html">makeMosaicStack</a></li><li><a href="./functions/visitMosaicLeafNodes.html">visitMosaicLeafNodes</a></li><li><a href="./functions/getVisibleMosaicLayoutPanels.html">getVisibleMosaicLayoutPanels</a></li><li><a href="./functions/findMosaicNodePathByKey.html">findMosaicNodePathByKey</a></li><li><a href="./functions/removeMosaicNodeByKey.html">removeMosaicNodeByKey</a></li></ul>`,31)])])}const y=i(n,[["render",l]]);export{d as __pageData,y as default};
