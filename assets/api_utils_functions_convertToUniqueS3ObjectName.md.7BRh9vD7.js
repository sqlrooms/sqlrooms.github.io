import{_ as t,c as a,o as n,ag as i}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Function: convertToUniqueS3ObjectName()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/utils/functions/convertToUniqueS3ObjectName.html"}]]},"headers":[],"relativePath":"api/utils/functions/convertToUniqueS3ObjectName.md","filePath":"api/utils/functions/convertToUniqueS3ObjectName.md"}'),o={name:"api/utils/functions/convertToUniqueS3ObjectName.md"};function s(r,e,c,d,l,u){return n(),a("div",null,[...e[0]||(e[0]=[i('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/utils/functions/convertToUniqueS3ObjectName.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/utils</a> / convertToUniqueS3ObjectName</p><h1 id="function-converttouniques3objectname" tabindex="-1">Function: convertToUniqueS3ObjectName() <a class="header-anchor" href="#function-converttouniques3objectname" aria-label="Permalink to &quot;Function: convertToUniqueS3ObjectName()&quot;">​</a></h1><blockquote><p><strong>convertToUniqueS3ObjectName</strong>(<code>str</code>, <code>existingObjects</code>?): <code>string</code></p></blockquote><p>Converts a string into a valid and unique S3 object name.</p><ul><li>Replaces special characters with underscores</li><li>Ensures name is within S3&#39;s length limits</li><li>Ensures uniqueness among existing objects</li></ul><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>str</code></td><td><code>string</code></td><td>The string to convert into an S3 object name</td></tr><tr><td><code>existingObjects</code>?</td><td><code>string</code>[]</td><td>Optional array of existing S3 object names to ensure uniqueness</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>A valid and unique S3 object name</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertToUniqueS3ObjectName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my file.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns &quot;my_file.txt&quot;</span></span></code></pre></div>',13)])])}const m=t(o,[["render",s]]);export{p as __pageData,m as default};
