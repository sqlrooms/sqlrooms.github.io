import{_ as e,c as d,o as c,ag as t}from"./chunks/framework.B-XtCDNB.js";const s=JSON.parse('{"title":"Variable: DataSource","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/room-config/variables/DataSource.html"}]]},"headers":[],"relativePath":"api/room-config/variables/DataSource.md","filePath":"api/room-config/variables/DataSource.md"}'),a={name:"api/room-config/variables/DataSource.md"};function l(n,o,i,r,g,Z){return c(),d("div",null,[...o[0]||(o[0]=[t('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/room-config/variables/DataSource.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/room-config</a> / DataSource</p><h1 id="variable-datasource" tabindex="-1">Variable: DataSource <a class="header-anchor" href="#variable-datasource" aria-label="Permalink to &quot;Variable: DataSource&quot;">â€‹</a></h1><blockquote><p><code>const</code> <strong>DataSource</strong>: <code>ZodDiscriminatedUnion</code>&lt;[<code>ZodObject</code>&lt;{ <code>tableName</code>: <code>ZodString</code>; <code>type</code>: <code>ZodLiteral</code>&lt;<code>&quot;file&quot;</code>&gt;; <code>fileName</code>: <code>ZodString</code>; <code>loadOptions</code>: <code>ZodOptional</code>&lt;<code>ZodDiscriminatedUnion</code>&lt;[<code>ZodObject</code>&lt;{ <code>schema</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>select</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;...&gt;&gt;; <code>where</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>view</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>temp</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>replace</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>method</code>: <code>ZodEnum</code>&lt;{ <code>read_json</code>: ...; <code>read_ndjson</code>: ...; <code>read_parquet</code>: ...; <code>read_csv</code>: ...; <code>auto</code>: ...; }&gt;; }, <code>$catchall</code>&lt;<code>ZodUnknown</code>&gt;&gt;, <code>ZodObject</code>&lt;{ <code>schema</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>select</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;...&gt;&gt;; <code>where</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>view</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>temp</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>replace</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>options</code>: <code>ZodOptional</code>&lt;<code>ZodUnion</code>&lt;...&gt;&gt;; <code>method</code>: <code>ZodLiteral</code>&lt;<code>&quot;st_read&quot;</code>&gt;; }, <code>$catchall</code>&lt;<code>ZodUnknown</code>&gt;&gt;], <code>&quot;method&quot;</code>&gt;&gt;; }, <code>$strip</code>&gt;, <code>ZodObject</code>&lt;{ <code>tableName</code>: <code>ZodString</code>; <code>type</code>: <code>ZodLiteral</code>&lt;<code>&quot;url&quot;</code>&gt;; <code>url</code>: <code>ZodString</code>; <code>loadOptions</code>: <code>ZodOptional</code>&lt;<code>ZodDiscriminatedUnion</code>&lt;[<code>ZodObject</code>&lt;{ <code>schema</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>select</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;...&gt;&gt;; <code>where</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>view</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>temp</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>replace</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>method</code>: <code>ZodEnum</code>&lt;{ <code>read_json</code>: ...; <code>read_ndjson</code>: ...; <code>read_parquet</code>: ...; <code>read_csv</code>: ...; <code>auto</code>: ...; }&gt;; }, <code>$catchall</code>&lt;<code>ZodUnknown</code>&gt;&gt;, <code>ZodObject</code>&lt;{ <code>schema</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>select</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;...&gt;&gt;; <code>where</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>view</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>temp</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>replace</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>options</code>: <code>ZodOptional</code>&lt;<code>ZodUnion</code>&lt;...&gt;&gt;; <code>method</code>: <code>ZodLiteral</code>&lt;<code>&quot;st_read&quot;</code>&gt;; }, <code>$catchall</code>&lt;<code>ZodUnknown</code>&gt;&gt;], <code>&quot;method&quot;</code>&gt;&gt;; <code>httpMethod</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>headers</code>: <code>ZodOptional</code>&lt;<code>ZodRecord</code>&lt;<code>ZodString</code>, <code>ZodString</code>&gt;&gt;; }, <code>$strip</code>&gt;, <code>ZodObject</code>&lt;{ <code>tableName</code>: <code>ZodString</code>; <code>type</code>: <code>ZodLiteral</code>&lt;<code>&quot;sql&quot;</code>&gt;; <code>sqlQuery</code>: <code>ZodString</code>; }, <code>$strip</code>&gt;], <code>&quot;type&quot;</code>&gt;</p></blockquote><p>Union type representing all possible data source configurations Discriminated union based on the &#39;type&#39; field</p>',5)])])}const u=e(a,[["render",l]]);export{s as __pageData,u as default};
