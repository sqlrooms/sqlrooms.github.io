import{_ as e,c as i,o as a,ag as s}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Function: splitFilePath()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/utils/functions/splitFilePath.html"}]]},"headers":[],"relativePath":"api/utils/functions/splitFilePath.md","filePath":"api/utils/functions/splitFilePath.md"}'),n={name:"api/utils/functions/splitFilePath.md"};function l(o,t,d,r,h,p){return a(),i("div",null,[...t[0]||(t[0]=[s(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/utils/functions/splitFilePath.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/utils</a> / splitFilePath</p><h1 id="function-splitfilepath" tabindex="-1">Function: splitFilePath() <a class="header-anchor" href="#function-splitfilepath" aria-label="Permalink to &quot;Function: splitFilePath()&quot;">​</a></h1><blockquote><p><strong>splitFilePath</strong>(<code>filePath</code>): <code>object</code></p></blockquote><p>Splits a file path into its directory, name, and extension components. Preserves the original path separator style (Windows backslashes or Unix forward slashes).</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>filePath</code></td><td><code>string</code></td><td>The full file path to split</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><p>An object containing the directory path, file name (without extension), extension, and full filename</p><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="dir"></a> <code>dir</code></td><td><code>string</code></td></tr><tr><td><a id="name"></a> <code>name</code></td><td><code>string</code></td></tr><tr><td><a id="ext"></a> <code>ext</code></td><td><code>string</code></td></tr><tr><td><a id="filename"></a> <code>filename</code></td><td><code>string</code></td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">splitFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/file.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns { dir: &quot;path/to&quot;, name: &quot;file&quot;, ext: &quot;txt&quot;, filename: &quot;file.txt&quot; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">splitFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Users</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">file.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns { dir: &quot;C:\\\\Users&quot;, name: &quot;file&quot;, ext: &quot;txt&quot;, filename: &quot;file.txt&quot; }</span></span></code></pre></div>`,13)])])}const k=e(n,[["render",l]]);export{u as __pageData,k as default};
