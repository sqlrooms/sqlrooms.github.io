import{_ as e,c as d,o as c,ag as t}from"./chunks/framework.B-XtCDNB.js";const Z=JSON.parse('{"title":"Variable: LoadFileOptions","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/room-config/variables/LoadFileOptions.html"}]]},"headers":[],"relativePath":"api/room-config/variables/LoadFileOptions.md","filePath":"api/room-config/variables/LoadFileOptions.md"}'),a={name:"api/room-config/variables/LoadFileOptions.md"};function i(n,o,l,r,s,p){return c(),d("div",null,[...o[0]||(o[0]=[t('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/room-config/variables/LoadFileOptions.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/room-config</a> / LoadFileOptions</p><h1 id="variable-loadfileoptions" tabindex="-1">Variable: LoadFileOptions <a class="header-anchor" href="#variable-loadfileoptions" aria-label="Permalink to &quot;Variable: LoadFileOptions&quot;">â€‹</a></h1><blockquote><p><code>const</code> <strong>LoadFileOptions</strong>: <code>ZodDiscriminatedUnion</code>&lt;[<code>ZodObject</code>&lt;{ <code>schema</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>select</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;<code>ZodString</code>&gt;&gt;; <code>where</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>view</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>temp</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>replace</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>method</code>: <code>ZodEnum</code>&lt;{ <code>read_json</code>: <code>&quot;read_json&quot;</code>; <code>read_ndjson</code>: <code>&quot;read_ndjson&quot;</code>; <code>read_parquet</code>: <code>&quot;read_parquet&quot;</code>; <code>read_csv</code>: <code>&quot;read_csv&quot;</code>; <code>auto</code>: <code>&quot;auto&quot;</code>; }&gt;; }, <code>$catchall</code>&lt;<code>ZodUnknown</code>&gt;&gt;, <code>ZodObject</code>&lt;{ <code>schema</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>select</code>: <code>ZodOptional</code>&lt;<code>ZodArray</code>&lt;<code>ZodString</code>&gt;&gt;; <code>where</code>: <code>ZodOptional</code>&lt;<code>ZodString</code>&gt;; <code>view</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>temp</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>replace</code>: <code>ZodOptional</code>&lt;<code>ZodBoolean</code>&gt;; <code>options</code>: <code>ZodOptional</code>&lt;<code>ZodUnion</code>&lt;readonly [<code>ZodArray</code>&lt;<code>ZodString</code>&gt;, <code>ZodString</code>, <code>ZodRecord</code>&lt;<code>ZodString</code>, <code>ZodUnknown</code>&gt;]&gt;&gt;; <code>method</code>: <code>ZodLiteral</code>&lt;<code>&quot;st_read&quot;</code>&gt;; }, <code>$catchall</code>&lt;<code>ZodUnknown</code>&gt;&gt;], <code>&quot;method&quot;</code>&gt;</p></blockquote><p>Union type of all possible file loading options Discriminated union based on the &#39;method&#39; field</p>',5)])])}const m=e(a,[["render",i]]);export{Z as __pageData,m as default};
