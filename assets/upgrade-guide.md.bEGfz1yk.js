import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"Upgrade Guide","description":"","frontmatter":{"outline":2,"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/upgrade-guide.html"}]]},"headers":[],"relativePath":"upgrade-guide.md","filePath":"upgrade-guide.md"}'),l={name:"upgrade-guide.md"};function n(o,s,h,p,r,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /upgrade-guide.md for this page in Markdown format</div><h1 id="upgrade-guide" tabindex="-1">Upgrade Guide <a class="header-anchor" href="#upgrade-guide" aria-label="Permalink to &quot;Upgrade Guide&quot;">​</a></h1><p>This document provides detailed guidance for upgrading between different versions of SQLRooms packages. Each section outlines breaking changes, required code modifications, and implementation examples to ensure a smooth upgrade process.</p><p>When upgrading, please follow the version-specific instructions below that apply to your project. If you encounter any issues during the upgrade process, please refer to our <a href="https://github.com/sqlrooms/sqlrooms/issues" target="_blank" rel="noreferrer">GitHub issues</a> or contact support.</p><h2 id="_0-25-0-rc-1" tabindex="-1">0.25.0-rc.1 <a class="header-anchor" href="#_0-25-0-rc-1" aria-label="Permalink to &quot;0.25.0-rc.1&quot;">​</a></h2><ul><li>createAiSlice init parameters changed: <ul><li>Instead of customTools and toolsOptions use tools + createDefaultAiTools(store, toolsOptions)</li><li>getInstructions must be provided, but can use createDefaultAiInstructions(store)</li></ul></li></ul><h2 id="_0-24-28-rc-1" tabindex="-1">0.24.28-rc.1 <a class="header-anchor" href="#_0-24-28-rc-1" aria-label="Permalink to &quot;0.24.28-rc.1&quot;">​</a></h2><ul><li>Discuss config separated from RoomConfig to make it easier to persist separately and to simplify typing (<code>state.discuss.config</code> instead of <code>state.config.discuss</code>)</li></ul><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> discussConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.discuss.config);</span></span></code></pre></div><p>After:</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> discussConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.config.discuss);</span></span></code></pre></div><p>If you were persisting this state, you will likely need a migration.</p><p>You should also remove <code>.merge(DiscussSliceConfig)</code> when defining your <code>RoomConfig</code></p><h2 id="_0-19-0" tabindex="-1">0.19.0 <a class="header-anchor" href="#_0-19-0" aria-label="Permalink to &quot;0.19.0&quot;">​</a></h2><p>We are trying to make the package structure more logical, especially, for new users of the SQLRooms framework. Sorry for the more renaming.</p><ul><li><p>Package <code>@sqlrooms/core</code> (previously, <code>@sqlrooms/project</code>) renamed to <code>@sqlrooms/room-store</code>.</p></li><li><p>The layout-related state and functions were moved to the new <code>LayoutSlice</code> added to <code>@sqlrooms/layout</code> which is namespaced as <code>layout</code>:</p><ul><li><code>panels</code></li><li><code>setLayout</code></li><li><code>togglePanel</code></li><li><code>tooglePanelPin</code></li></ul></li></ul><p>Before:</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> togglePanel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.room.togglePanel);</span></span></code></pre></div><p>After:</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> togglePanel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.layout.togglePanel);</span></span></code></pre></div><h2 id="_0-18-0" tabindex="-1">0.18.0 <a class="header-anchor" href="#_0-18-0" aria-label="Permalink to &quot;0.18.0&quot;">​</a></h2><p><code>QueryHandle</code> returned from <code>.query()</code> is now implementing <code>PromiseLike</code> and can be awaited. So adding <code>.result</code>, which was introduced in <a href="#_0-16-0">0.16.0</a>, is not necessary anymore.</p><h3 id="old" tabindex="-1">Old <a class="header-anchor" href="#old" aria-label="Permalink to &quot;Old&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connector.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM some_table&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).result;</span></span></code></pre></div><h3 id="new" tabindex="-1">New <a class="header-anchor" href="#new" aria-label="Permalink to &quot;New&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connector.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM some_table&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_0-17-0" tabindex="-1">0.17.0 <a class="header-anchor" href="#_0-17-0" aria-label="Permalink to &quot;0.17.0&quot;">​</a></h2><p>This release focuses on standardizing terminology across the codebase and improving the developer experience for new users. We are replacing the concept of &quot;project&quot; with &quot;room&quot; to better align with the SQLRooms name. &quot;Room&quot; is an established concept in collaborative apps and fits well with the overall vision of the project.</p><h3 id="package-name-changes" tabindex="-1">Package name changes <a class="header-anchor" href="#package-name-changes" aria-label="Permalink to &quot;Package name changes&quot;">​</a></h3><ul><li><code>@sqlrooms/project</code> renamed to <code>@sqlrooms/core</code> (renamed again to <code>@sqlrooms/room-store</code> in <a href="#_0-19-0">0.19.0</a>, sorry)</li><li><code>@sqlrooms/project-config</code> renamed to <code>@sqlrooms/room-config</code></li><li><code>@sqlrooms/project-builder</code> renamed to <code>@sqlrooms/room-shell</code></li></ul><h3 id="component-name-changes" tabindex="-1">Component name changes <a class="header-anchor" href="#component-name-changes" aria-label="Permalink to &quot;Component name changes&quot;">​</a></h3><ul><li><code>ProjectBuilder</code> is replaced by <code>RoomShell</code></li><li><code>ProjectBuilderProvider</code> is removed (in favor of <code>RoomShell</code>)</li><li><code>ProjectBuilderState</code> renamed to <code>RoomShellSliceState</code></li><li><code>createProjectBuilderStore</code> renamed to <code>createRoomStore</code></li><li><code>createProjectBuilderSlice</code> renamed to <code>createRoomShellSlice</code></li><li><code>ProjectBuilderPanel</code> renamed to <code>RoomPanel</code></li><li><code>ProjectBuilderPanelHeader</code> renamed to <code>RoomPanelHeader</code></li></ul><h4 id="old-way-to-set-up-a-project" tabindex="-1">Old way to set up a project <a class="header-anchor" href="#old-way-to-set-up-a-project" aria-label="Permalink to &quot;Old way to set up a project&quot;">​</a></h4><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProjectBuilderProvider</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> projectStore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{projectStore}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex h-full w-full&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg-muted/50 flex h-full flex-col px-1 py-2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProjectBuilderSidebarButtons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flex h-full w-full flex-col&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProjectBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProjectBuilderProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="new-1" tabindex="-1">New <a class="header-anchor" href="#new-1" aria-label="Permalink to &quot;New&quot;">​</a></h4><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RoomShell</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h-screen&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> roomStore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{roomStore}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RoomShell.Sidebar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RoomShell.LayoutComposer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RoomShell.LoadingProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RoomShell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="state-name-changes" tabindex="-1">State name changes <a class="header-anchor" href="#state-name-changes" aria-label="Permalink to &quot;State name changes&quot;">​</a></h3><ul><li><code>state.project</code> namespace renamed to <code>state.room</code></li></ul><h4 id="old-1" tabindex="-1">Old <a class="header-anchor" href="#old-1" aria-label="Permalink to &quot;Old&quot;">​</a></h4><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataSources</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useProjectStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.project.dataSources);</span></span></code></pre></div><h4 id="new-2" tabindex="-1">New <a class="header-anchor" href="#new-2" aria-label="Permalink to &quot;New&quot;">​</a></h4><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataSources</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.room.dataSources);</span></span></code></pre></div><h2 id="_0-16-3" tabindex="-1">0.16.3 <a class="header-anchor" href="#_0-16-3" aria-label="Permalink to &quot;0.16.3&quot;">​</a></h2><h3 id="sqlrooms-duckdb" tabindex="-1">@sqlrooms/duckdb <a class="header-anchor" href="#sqlrooms-duckdb" aria-label="Permalink to &quot;@sqlrooms/duckdb&quot;">​</a></h3><p>The <code>BaseDuckDbConnector</code> and <code>WasmDuckDbConnector</code> are now provided as factory functions rather than classes. Use <code>createWasmDuckDbConnector()</code> or the generic <code>createDuckDbConnector({type: &#39;wasm&#39;})</code> to obtain a connector instance.</p><h4 id="before" tabindex="-1">Before <a class="header-anchor" href="#before" aria-label="Permalink to &quot;Before&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {WasmDuckDbConnector} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sqlrooms/duckdb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> connector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WasmDuckDbConnector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="after" tabindex="-1">After <a class="header-anchor" href="#after" aria-label="Permalink to &quot;After&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {createWasmDuckDbConnector} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sqlrooms/duckdb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> connector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createWasmDuckDbConnector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="_0-16-0" tabindex="-1">0.16.0 <a class="header-anchor" href="#_0-16-0" aria-label="Permalink to &quot;0.16.0&quot;">​</a></h2><h3 id="sqlrooms-duckdb-1" tabindex="-1">@sqlrooms/duckdb <a class="header-anchor" href="#sqlrooms-duckdb-1" aria-label="Permalink to &quot;@sqlrooms/duckdb&quot;">​</a></h3><p>The DuckDbConnector now supports query cancellation through a unified <code>QueryHandle</code> interface with full composability support. All query methods (<code>execute</code>, <code>query</code>, <code>queryJson</code>) now return a <code>QueryHandle</code> that provides immediate access to cancellation functionality and signal composability. <a href="https://sqlrooms.org/query-cancellation" target="_blank" rel="noreferrer">Read more…</a></p><h4 id="old-2" tabindex="-1">Old <a class="header-anchor" href="#old-2" aria-label="Permalink to &quot;Old&quot;">​</a></h4><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connector.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM some_table&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="new-3" tabindex="-1">New <a class="header-anchor" href="#new-3" aria-label="Permalink to &quot;New&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Since <a href="#_0-18-0">0.18.0</a> <code>QueryHandle</code> returned from <code>.query()</code> is implementing <code>PromiseLike</code> and can be awaited. So adding <code>.result</code> is not necessary anymore.</p></div><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> connector.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM some_table&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).result;</span></span></code></pre></div><h2 id="_0-14-0" tabindex="-1">0.14.0 <a class="header-anchor" href="#_0-14-0" aria-label="Permalink to &quot;0.14.0&quot;">​</a></h2><h3 id="sqlrooms-ui" tabindex="-1">@sqlrooms/ui <a class="header-anchor" href="#sqlrooms-ui" aria-label="Permalink to &quot;@sqlrooms/ui&quot;">​</a></h3><ul><li><code>sqlroomsTailwindPreset</code> prefix parameter was removed</li></ul><h2 id="_0-9-0" tabindex="-1">0.9.0 <a class="header-anchor" href="#_0-9-0" aria-label="Permalink to &quot;0.9.0&quot;">​</a></h2><h3 id="sqlrooms-project-builder" tabindex="-1">@sqlrooms/project-builder <a class="header-anchor" href="#sqlrooms-project-builder" aria-label="Permalink to &quot;@sqlrooms/project-builder&quot;">​</a></h3><ul><li><p><code>createProjectSlice</code> renamed into <code>createProjectBuilderSlice</code></p></li><li><p><code>createProjectStore</code> renamed into <code>createProjectBuilderStore</code></p></li><li><p><code>ProjectState</code> renamed into <code>ProjectBuilderState</code></p></li><li><p><code>projectId</code> and <code>setProjectId</code> removed: add custom state if necessary</p></li><li><p><code>INITIAL_BASE_PROJECT_STATE</code> renamed into <code>INITIAL_PROJECT_BUILDER_STATE</code></p></li><li><p>A number of project store props and moved from <code>.project</code> to <code>.db</code>:</p><ul><li><code>.tables</code></li><li><code>.addTable</code></li><li><code>.getTable</code></li><li><code>.getTables</code></li><li><code>.getTableRowCount</code></li><li><code>.getTableSchema</code></li><li><code>.getTableSchemas</code></li><li><code>.checkTableExists</code></li><li><code>.dropTable</code></li><li><code>.createTableFromQuery</code></li><li><code>.setTableRowCount</code></li><li><code>.findTableByName</code></li><li><code>.refreshTableSchemas</code></li></ul></li><li><p><code>useBaseProjectStore</code> was renamed into <code>useBaseProjectBuilderStore</code>, but it&#39;s better to use <code>useProjectStore</code> returned by <code>createProjectBuilderStore</code> instead</p></li><li><p><code>processDroppedFile()</code> is removed: Use <code>ProjectStore.addProjectFile</code> directly.</p></li><li><p><code>ProjectStore.replaceProjectFile</code> is removed: Use <code>ProjectStore.addProjectFile</code> instead.</p></li><li><p><code>ProjectStore.addProjectFile</code> parameter changes: The function now takes a File or a pathname instead of the result of <code>processDroppedFile()</code>.</p></li><li><p><code>ProjectStore.addProjectFile</code> behavior changes: The function will no longer attempt to create unique table names, but will overwrite the created table.</p></li><li><p><code>ProjectStore.areViewsReadyToRender</code> and <code>onDataUpdated</code> were removed</p></li><li><p><code>ProjectStore.setTables</code> removed: use <code>state.db.refreshTableSchemas()</code> instead.</p></li><li><p><code>ProjectStore.isReadOnly</code> was removed: pass <code>isReadOnly</code> as a prop to respective components instead</p></li></ul><h3 id="sqlrooms-duckdb-2" tabindex="-1">@sqlrooms/duckdb <a class="header-anchor" href="#sqlrooms-duckdb-2" aria-label="Permalink to &quot;@sqlrooms/duckdb&quot;">​</a></h3><ul><li><p><code>useDuckDb()</code> now returns an instance of <a href="./api/duckdb/interfaces/DuckDbConnector.html"><code>DuckDbConnector</code></a> to enable support for external DuckDB</p></li><li><p><code>getDuckDb</code> was removed: Use <code>useDuckDb()</code> instead</p></li><li><p><code>getDuckTableSchemas</code> was removed: use <code>const getTableSchemas = useProjectStore(state =&gt; state.db.getTableSchemas)</code></p></li><li><p><code>exportToCsv</code> was removed: Use <code>useExportToCsv</code> instead</p></li></ul><h3 id="sqlrooms-mosaic" tabindex="-1">@sqlrooms/mosaic <a class="header-anchor" href="#sqlrooms-mosaic" aria-label="Permalink to &quot;@sqlrooms/mosaic&quot;">​</a></h3><ul><li><code>getMosaicConnector</code> removed: Use <code>useMosaic</code> instead</li></ul><h3 id="sqlrooms-ai" tabindex="-1">@sqlrooms/ai <a class="header-anchor" href="#sqlrooms-ai" aria-label="Permalink to &quot;@sqlrooms/ai&quot;">​</a></h3><ul><li><code>TOOLS</code> is not exported anymore: use <code>useProjectStore(state =&gt; state.ai.tools)</code> instead</li></ul><h2 id="_0-8-0" tabindex="-1">0.8.0 <a class="header-anchor" href="#_0-8-0" aria-label="Permalink to &quot;0.8.0&quot;">​</a></h2><h3 id="sqlrooms-project-builder-1" tabindex="-1">@sqlrooms/project-builder <a class="header-anchor" href="#sqlrooms-project-builder-1" aria-label="Permalink to &quot;@sqlrooms/project-builder&quot;">​</a></h3><ul><li><code>project.config</code> moved to top level of <code>ProjectStore</code></li></ul><p>This was done to simplify persistence. To migrate you need to pull it up in your slice creation code.</p><p>Before:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">projectStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">useProjectStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> createProjectStore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  RoomConfig,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  RoomState</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createProjectSlice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RoomConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        project: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          config: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          },</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>After:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">projectStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">useProjectStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> createProjectStore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  RoomConfig,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  RoomState</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createProjectSlice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RoomConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        config: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        project: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Check the <a href="https://github.com/sqlrooms/examples/blob/main/ai/src/store.ts" target="_blank" rel="noreferrer">AI example store code</a>.</p><h3 id="sqlrooms-ai-1" tabindex="-1">@sqlrooms/ai <a class="header-anchor" href="#sqlrooms-ai-1" aria-label="Permalink to &quot;@sqlrooms/ai&quot;">​</a></h3><ul><li>Model provider in <code>getApiKey</code></li></ul><p><code>getApiKey</code> property of <code>createAiSlice</code> now takes <code>modelProvider</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createAiSlice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getApiKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">modelProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()?.apiKeys[modelProvider] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})(set, get, store),</span></span></code></pre></div><ul><li>Combining <code>useScrollToBottom</code> and <code>useScrollToBottomButton</code></li></ul><p><code>useScrollToBottom</code> is now combined with <code>useScrollToBottomButton</code>. <code>useScrollToBottom</code> now takes <code>dataToObserve</code>, <code>containerRef</code>, <code>endRef</code>. When the data changes, the hook will scroll to the bottom of the container.</p><ul><li>Vega Chart Tool is now a custom tool</li></ul><p>The Vega Chart Tool is no longer included by default and must be explicitly provided as a custom tool to <code>createAiSlice</code>. You need to import it from <code>@sqlrooms/vega</code> and add it to the <code>customTools</code> object:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {createVegaChartTool} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sqlrooms/vega&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createAiSlice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  getApiKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">modelProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()?.apiKeys[modelProvider] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Add custom tools</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  customTools: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Add the VegaChart tool from the vega package</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chart: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createVegaChartTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Other custom tools...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})(set, get, store),</span></span></code></pre></div><p>This change allows for more flexibility in configuring the chart tool and reduces bundle size for applications that don&#39;t need chart functionality.</p>`,88)])])}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
