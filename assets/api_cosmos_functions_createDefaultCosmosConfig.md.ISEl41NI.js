import{_ as e,c as t,o as c,ag as a}from"./chunks/framework.B-XtCDNB.js";const f=JSON.parse('{"title":"Function: createDefaultCosmosConfig()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/cosmos/functions/createDefaultCosmosConfig.html"}]]},"headers":[],"relativePath":"api/cosmos/functions/createDefaultCosmosConfig.md","filePath":"api/cosmos/functions/createDefaultCosmosConfig.md"}'),n={name:"api/cosmos/functions/createDefaultCosmosConfig.md"};function d(s,o,i,r,l,u){return c(),t("div",null,[...o[0]||(o[0]=[a('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/cosmos/functions/createDefaultCosmosConfig.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/cosmos</a> / createDefaultCosmosConfig</p><h1 id="function-createdefaultcosmosconfig" tabindex="-1">Function: createDefaultCosmosConfig() <a class="header-anchor" href="#function-createdefaultcosmosconfig" aria-label="Permalink to &quot;Function: createDefaultCosmosConfig()&quot;">​</a></h1><blockquote><p><strong>createDefaultCosmosConfig</strong>(): <code>object</code></p></blockquote><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="cosmos"></a> <code>cosmos</code></td><td>{ <code>pointSizeScale</code>: <code>number</code>; <code>scalePointsOnZoom</code>: <code>boolean</code>; <code>renderLinks</code>: <code>boolean</code>; <code>linkWidthScale</code>: <code>number</code>; <code>linkArrowsSizeScale</code>: <code>number</code>; <code>linkArrows</code>: <code>boolean</code>; <code>curvedLinks</code>: <code>boolean</code>; <code>simulationGravity</code>: <code>number</code>; <code>simulationRepulsion</code>: <code>number</code>; <code>simulationLinkSpring</code>: <code>number</code>; <code>simulationLinkDistance</code>: <code>number</code>; <code>simulationFriction</code>: <code>number</code>; <code>simulationDecay</code>: <code>number</code>; }</td></tr></tbody></table>',7)])])}const p=e(n,[["render",d]]);export{f as __pageData,p as default};
