import{_ as t,c as d,o,ag as a}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Type Alias: LegendProps","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/recharts/type-aliases/LegendProps.html"}]]},"headers":[],"relativePath":"api/recharts/type-aliases/LegendProps.md","filePath":"api/recharts/type-aliases/LegendProps.md"}'),r={name:"api/recharts/type-aliases/LegendProps.md"};function c(n,e,s,p,i,l){return o(),d("div",null,[...e[0]||(e[0]=[a('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/recharts/type-aliases/LegendProps.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/recharts</a> / LegendProps</p><h1 id="type-alias-legendprops" tabindex="-1">Type Alias: LegendProps <a class="header-anchor" href="#type-alias-legendprops" aria-label="Permalink to &quot;Type Alias: LegendProps&quot;">​</a></h1><blockquote><p><strong>LegendProps</strong>: <a href="./DefaultLegendContentProps.html"><code>DefaultLegendContentProps</code></a> &amp; <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><code>wrapperStyle</code>?</td><td><code>CSSProperties</code></td></tr><tr><td><code>chartWidth</code>?</td><td><code>number</code></td></tr><tr><td><code>chartHeight</code>?</td><td><code>number</code></td></tr><tr><td><code>width</code>?</td><td><code>number</code></td></tr><tr><td><code>height</code>?</td><td><code>number</code></td></tr><tr><td><code>margin</code>?</td><td>{ <code>top</code>: <code>number</code>; <code>left</code>: <code>number</code>; <code>bottom</code>: <code>number</code>; <code>right</code>: <code>number</code>; }</td></tr><tr><td><code>payloadUniqBy</code>?</td><td><code>UniqueOption</code>&lt;<code>Payload</code>&gt;</td></tr><tr><td><code>onBBoxUpdate</code>?</td><td>(<code>box</code>) =&gt; <code>void</code></td></tr></tbody></table>',6)])])}const g=t(r,[["render",c]]);export{m as __pageData,g as default};
