import{_ as a,c as t,o,ag as r}from"./chunks/framework.B-XtCDNB.js";const b=JSON.parse('{"title":"Interface: DefaultTooltipContentProps<TValue, TName>","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/recharts/interfaces/DefaultTooltipContentProps.html"}]]},"headers":[],"relativePath":"api/recharts/interfaces/DefaultTooltipContentProps.md","filePath":"api/recharts/interfaces/DefaultTooltipContentProps.md"}'),l={name:"api/recharts/interfaces/DefaultTooltipContentProps.md"};function d(c,e,n,s,i,h){return o(),t("div",null,[...e[0]||(e[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/recharts/interfaces/DefaultTooltipContentProps.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/recharts</a> / DefaultTooltipContentProps</p><h1 id="interface-defaulttooltipcontentprops-tvalue-tname" tabindex="-1">Interface: DefaultTooltipContentProps&lt;TValue, TName&gt; <a class="header-anchor" href="#interface-defaulttooltipcontentprops-tvalue-tname" aria-label="Permalink to &quot;Interface: DefaultTooltipContentProps\\&lt;TValue, TName\\&gt;&quot;">​</a></h1><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><code>TValue</code> <em>extends</em> <code>ValueType</code></td></tr><tr><td><code>TName</code> <em>extends</em> <code>NameType</code></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="separator" tabindex="-1">separator? <a class="header-anchor" href="#separator" aria-label="Permalink to &quot;separator?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>separator</strong>: <code>string</code></p></blockquote><hr><h3 id="wrapperclassname" tabindex="-1">wrapperClassName? <a class="header-anchor" href="#wrapperclassname" aria-label="Permalink to &quot;wrapperClassName?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>wrapperClassName</strong>: <code>string</code></p></blockquote><hr><h3 id="labelclassname" tabindex="-1">labelClassName? <a class="header-anchor" href="#labelclassname" aria-label="Permalink to &quot;labelClassName?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>labelClassName</strong>: <code>string</code></p></blockquote><hr><h3 id="formatter" tabindex="-1">formatter? <a class="header-anchor" href="#formatter" aria-label="Permalink to &quot;formatter?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>formatter</strong>: <code>Formatter</code>&lt;<code>TValue</code>, <code>TName</code>&gt;</p></blockquote><hr><h3 id="contentstyle" tabindex="-1">contentStyle? <a class="header-anchor" href="#contentstyle" aria-label="Permalink to &quot;contentStyle?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>contentStyle</strong>: <code>CSSProperties</code></p></blockquote><hr><h3 id="itemstyle" tabindex="-1">itemStyle? <a class="header-anchor" href="#itemstyle" aria-label="Permalink to &quot;itemStyle?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>itemStyle</strong>: <code>CSSProperties</code></p></blockquote><hr><h3 id="labelstyle" tabindex="-1">labelStyle? <a class="header-anchor" href="#labelstyle" aria-label="Permalink to &quot;labelStyle?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>labelStyle</strong>: <code>CSSProperties</code></p></blockquote><hr><h3 id="labelformatter" tabindex="-1">labelFormatter()? <a class="header-anchor" href="#labelformatter" aria-label="Permalink to &quot;labelFormatter()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>labelFormatter</strong>: (<code>label</code>, <code>payload</code>) =&gt; <code>ReactNode</code></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>label</code></td><td><code>any</code></td></tr><tr><td><code>payload</code></td><td><code>Payload</code>&lt;<code>TValue</code>, <code>TName</code>&gt;[]</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>ReactNode</code></p><hr><h3 id="label" tabindex="-1">label? <a class="header-anchor" href="#label" aria-label="Permalink to &quot;label?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>label</strong>: <code>any</code></p></blockquote><hr><h3 id="payload" tabindex="-1">payload? <a class="header-anchor" href="#payload" aria-label="Permalink to &quot;payload?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>payload</strong>: <code>Payload</code>&lt;<code>TValue</code>, <code>TName</code>&gt;[]</p></blockquote><hr><h3 id="itemsorter" tabindex="-1">itemSorter()? <a class="header-anchor" href="#itemsorter" aria-label="Permalink to &quot;itemSorter()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>itemSorter</strong>: (<code>item</code>) =&gt; <code>string</code> | <code>number</code></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>item</code></td><td><code>Payload</code>&lt;<code>TValue</code>, <code>TName</code>&gt;</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code> | <code>number</code></p><hr><h3 id="accessibilitylayer" tabindex="-1">accessibilityLayer? <a class="header-anchor" href="#accessibilitylayer" aria-label="Permalink to &quot;accessibilityLayer?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>accessibilityLayer</strong>: <code>boolean</code></p></blockquote>',49)])])}const u=a(l,[["render",d]]);export{b as __pageData,u as default};
