import{_ as t,c as a,o as r,ag as o}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Function: safeJsonParse()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/utils/functions/safeJsonParse.html"}]]},"headers":[],"relativePath":"api/utils/functions/safeJsonParse.md","filePath":"api/utils/functions/safeJsonParse.md"}'),s={name:"api/utils/functions/safeJsonParse.md"};function n(d,e,i,c,l,u){return r(),a("div",null,[...e[0]||(e[0]=[o('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/utils/functions/safeJsonParse.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/utils</a> / safeJsonParse</p><h1 id="function-safejsonparse" tabindex="-1">Function: safeJsonParse() <a class="header-anchor" href="#function-safejsonparse" aria-label="Permalink to &quot;Function: safeJsonParse()&quot;">​</a></h1><blockquote><p><strong>safeJsonParse</strong>&lt;<code>T</code>&gt;(<code>json</code>): <code>undefined</code> | <code>T</code></p></blockquote><p>Parse a JSON string and return the parsed object. If the string is not valid JSON, return undefined.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><code>T</code></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>json</code></td><td><code>undefined</code> | <code>null</code> | <code>string</code></td><td>The JSON string to parse.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>undefined</code> | <code>T</code></p><p>The parsed object or undefined if the string is not valid JSON.</p>',12)])])}const f=t(s,[["render",n]]);export{p as __pageData,f as default};
