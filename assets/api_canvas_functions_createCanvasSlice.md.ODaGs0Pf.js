import{_ as t,c as a,o,ag as c}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Function: createCanvasSlice()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/canvas/functions/createCanvasSlice.html"}]]},"headers":[],"relativePath":"api/canvas/functions/createCanvasSlice.md","filePath":"api/canvas/functions/createCanvasSlice.md"}'),d={name:"api/canvas/functions/createCanvasSlice.md"};function r(n,e,i,s,l,p){return o(),a("div",null,[...e[0]||(e[0]=[c('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/canvas/functions/createCanvasSlice.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/canvas</a> / createCanvasSlice</p><h1 id="function-createcanvasslice" tabindex="-1">Function: createCanvasSlice() <a class="header-anchor" href="#function-createcanvasslice" aria-label="Permalink to &quot;Function: createCanvasSlice()&quot;">​</a></h1><blockquote><p><strong>createCanvasSlice</strong>&lt;<code>PC</code>&gt;(<code>props</code>): <code>StateCreator</code>&lt;<a href="./../type-aliases/CanvasSliceState.html"><code>CanvasSliceState</code></a>&gt;</p></blockquote><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th><th>Default type</th></tr></thead><tbody><tr><td><code>PC</code> <em>extends</em> <code>object</code></td><td><code>object</code></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>props</code></td><td>{ <code>config</code>: <code>Partial</code>&lt;{ <code>viewport</code>: { <code>x</code>: <code>number</code>; <code>y</code>: <code>number</code>; <code>zoom</code>: <code>number</code>; }; <code>nodes</code>: <code>object</code>[]; <code>edges</code>: <code>object</code>[]; }&gt;; <code>ai</code>: <code>Partial</code>&lt;<code>AiSliceOptions</code>&gt;; }</td></tr><tr><td><code>props.config</code>?</td><td><code>Partial</code>&lt;{ <code>viewport</code>: { <code>x</code>: <code>number</code>; <code>y</code>: <code>number</code>; <code>zoom</code>: <code>number</code>; }; <code>nodes</code>: <code>object</code>[]; <code>edges</code>: <code>object</code>[]; }&gt;</td></tr><tr><td><code>props.ai</code>?</td><td><code>Partial</code>&lt;<code>AiSliceOptions</code>&gt;</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>StateCreator</code>&lt;<a href="./../type-aliases/CanvasSliceState.html"><code>CanvasSliceState</code></a>&gt;</p>',10)])])}const u=t(d,[["render",r]]);export{m as __pageData,u as default};
