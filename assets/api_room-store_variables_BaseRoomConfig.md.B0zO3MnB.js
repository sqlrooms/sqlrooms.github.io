import{_ as e,c as d,o as c,ag as t}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Variable: BaseRoomConfig","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/room-store/variables/BaseRoomConfig.html"}]]},"headers":[],"relativePath":"api/room-store/variables/BaseRoomConfig.md","filePath":"api/room-store/variables/BaseRoomConfig.md"}'),a={name:"api/room-store/variables/BaseRoomConfig.md"};function i(r,o,l,n,s,g){return c(),d("div",null,[...o[0]||(o[0]=[t('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/room-store/variables/BaseRoomConfig.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/room-store</a> / BaseRoomConfig</p><h1 id="variable-baseroomconfig" tabindex="-1">Variable: BaseRoomConfig <a class="header-anchor" href="#variable-baseroomconfig" aria-label="Permalink to &quot;Variable: BaseRoomConfig&quot;">â€‹</a></h1><blockquote><p><code>const</code> <strong>BaseRoomConfig</strong>: <code>z.ZodObject</code>&lt;{ <code>title</code>: <code>z.ZodDefault</code>&lt;<code>z.ZodString</code>&gt;; <code>description</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodNullable</code>&lt;<code>z.ZodString</code>&gt;&gt;; <code>layout</code>: <code>z.ZodDefault</code>&lt;<code>z.ZodDiscriminatedUnion</code>&lt;[<code>z.ZodObject</code>&lt;{ <code>type</code>: <code>z.ZodLiteral</code>&lt;<code>&quot;mosaic&quot;</code>&gt;; <code>nodes</code>: <code>z.ZodNullable</code>&lt;<code>z.ZodUnion</code>&lt;readonly [..., ...]&gt;&gt;; <code>pinned</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodArray</code>&lt;<code>z.ZodString</code>&gt;&gt;; <code>fixed</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodArray</code>&lt;<code>z.ZodString</code>&gt;&gt;; }, <code>z.core.$strip</code>&gt;], <code>&quot;type&quot;</code>&gt;&gt;; <code>dataSources</code>: <code>z.ZodDefault</code>&lt;<code>z.ZodArray</code>&lt;<code>z.ZodDiscriminatedUnion</code>&lt;[<code>z.ZodObject</code>&lt;{ <code>tableName</code>: <code>z.ZodString</code>; <code>type</code>: <code>z.ZodLiteral</code>&lt;<code>&quot;file&quot;</code>&gt;; <code>fileName</code>: <code>z.ZodString</code>; <code>loadOptions</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodDiscriminatedUnion</code>&lt;[..., ...], <code>&quot;method&quot;</code>&gt;&gt;; }, <code>z.core.$strip</code>&gt;, <code>z.ZodObject</code>&lt;{ <code>tableName</code>: <code>z.ZodString</code>; <code>type</code>: <code>z.ZodLiteral</code>&lt;<code>&quot;url&quot;</code>&gt;; <code>url</code>: <code>z.ZodString</code>; <code>loadOptions</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodDiscriminatedUnion</code>&lt;[..., ...], <code>&quot;method&quot;</code>&gt;&gt;; <code>httpMethod</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodString</code>&gt;; <code>headers</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodRecord</code>&lt;<code>z.ZodString</code>, <code>z.ZodString</code>&gt;&gt;; }, <code>z.core.$strip</code>&gt;, <code>z.ZodObject</code>&lt;{ <code>tableName</code>: <code>z.ZodString</code>; <code>type</code>: <code>z.ZodLiteral</code>&lt;<code>&quot;sql&quot;</code>&gt;; <code>sqlQuery</code>: <code>z.ZodString</code>; }, <code>z.core.$strip</code>&gt;], <code>&quot;type&quot;</code>&gt;&gt;&gt;; }, <code>z.core.$strip</code>&gt;</p></blockquote>',4)])])}const p=e(a,[["render",i]]);export{m as __pageData,p as default};
