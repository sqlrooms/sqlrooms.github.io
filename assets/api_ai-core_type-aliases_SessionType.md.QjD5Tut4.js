import{_ as e,c as i,o as a,ag as t}from"./chunks/framework.B-XtCDNB.js";const k=JSON.parse('{"title":"Type Alias: SessionType","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/ai-core/type-aliases/SessionType.html"}]]},"headers":[],"relativePath":"api/ai-core/type-aliases/SessionType.md","filePath":"api/ai-core/type-aliases/SessionType.md"}'),n={name:"api/ai-core/type-aliases/SessionType.md"};function o(d,s,p,l,r,h){return a(),i("div",null,[...s[0]||(s[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/ai-core/type-aliases/SessionType.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/ai-core</a> / SessionType</p><h1 id="type-alias-sessiontype" tabindex="-1">Type Alias: SessionType <a class="header-anchor" href="#type-alias-sessiontype" aria-label="Permalink to &quot;Type Alias: SessionType&quot;">​</a></h1><blockquote><p><strong>SessionType</strong>: <code>object</code></p></blockquote><p>Represents a session in the AI system.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a id="id"></a> <code>id</code></td><td><code>string</code></td><td>Unique identifier for the session</td></tr><tr><td><a id="name"></a> <code>name</code></td><td><code>string</code></td><td>Display name of the session</td></tr><tr><td><a id="modelprovider"></a> <code>modelProvider</code>?</td><td><code>string</code></td><td>Provider of the AI model (e.g., &quot;openai&quot;)</td></tr><tr><td><a id="model"></a> <code>model</code>?</td><td><code>string</code></td><td>Name of the AI model being used (e.g., &quot;gpt-4o-mini&quot;)</td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SessionType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;session_123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My Analysis Session&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modelProvider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;openai&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gpt-4o-mini&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,9)])])}const y=e(n,[["render",o]]);export{k as __pageData,y as default};
