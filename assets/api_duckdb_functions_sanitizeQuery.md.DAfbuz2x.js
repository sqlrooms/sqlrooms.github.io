import{_ as t,c as a,o as r,ag as i}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Function: sanitizeQuery()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/duckdb/functions/sanitizeQuery.html"}]]},"headers":[],"relativePath":"api/duckdb/functions/sanitizeQuery.md","filePath":"api/duckdb/functions/sanitizeQuery.md"}'),n={name:"api/duckdb/functions/sanitizeQuery.md"};function o(s,e,d,c,u,l){return r(),a("div",null,[...e[0]||(e[0]=[i('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/duckdb/functions/sanitizeQuery.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/duckdb</a> / sanitizeQuery</p><h1 id="function-sanitizequery" tabindex="-1">Function: sanitizeQuery() <a class="header-anchor" href="#function-sanitizequery" aria-label="Permalink to &quot;Function: sanitizeQuery()&quot;">​</a></h1><blockquote><p><strong>sanitizeQuery</strong>(<code>query</code>): <code>string</code></p></blockquote><p>Sanitizes a SQL query by removing trailing semicolons, comments, and normalizing whitespace</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>query</code></td><td><code>string</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p>',9)])])}const m=t(n,[["render",o]]);export{p as __pageData,m as default};
