import{_ as o,c as a,o as t,ag as r}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Interface: TreemapProps","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/recharts/interfaces/TreemapProps.html"}]]},"headers":[],"relativePath":"api/recharts/interfaces/TreemapProps.md","filePath":"api/recharts/interfaces/TreemapProps.md"}'),n={name:"api/recharts/interfaces/TreemapProps.md"};function d(i,e,c,l,s,h){return t(),a("div",null,[...e[0]||(e[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/recharts/interfaces/TreemapProps.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/recharts</a> / TreemapProps</p><h1 id="interface-treemapprops" tabindex="-1">Interface: TreemapProps <a class="header-anchor" href="#interface-treemapprops" aria-label="Permalink to &quot;Interface: TreemapProps&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="width" tabindex="-1">width? <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>width</strong>: <code>number</code></p></blockquote><hr><h3 id="height" tabindex="-1">height? <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>height</strong>: <code>number</code></p></blockquote><hr><h3 id="data" tabindex="-1">data? <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>data</strong>: <code>any</code>[]</p></blockquote><hr><h3 id="animationid" tabindex="-1">animationId? <a class="header-anchor" href="#animationid" aria-label="Permalink to &quot;animationId?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>animationId</strong>: <code>number</code></p></blockquote><hr><h3 id="style" tabindex="-1">style? <a class="header-anchor" href="#style" aria-label="Permalink to &quot;style?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>style</strong>: <code>any</code></p></blockquote><hr><h3 id="aspectratio" tabindex="-1">aspectRatio? <a class="header-anchor" href="#aspectratio" aria-label="Permalink to &quot;aspectRatio?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>aspectRatio</strong>: <code>number</code></p></blockquote><hr><h3 id="content" tabindex="-1">content? <a class="header-anchor" href="#content" aria-label="Permalink to &quot;content?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>content</strong>: <code>ReactElement</code>&lt;<code>unknown</code>, <code>string</code> | <code>JSXElementConstructor</code>&lt;<code>any</code>&gt;&gt;</p></blockquote><hr><h3 id="fill" tabindex="-1">fill? <a class="header-anchor" href="#fill" aria-label="Permalink to &quot;fill?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>fill</strong>: <code>string</code></p></blockquote><hr><h3 id="stroke" tabindex="-1">stroke? <a class="header-anchor" href="#stroke" aria-label="Permalink to &quot;stroke?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>stroke</strong>: <code>string</code></p></blockquote><hr><h3 id="classname" tabindex="-1">className? <a class="header-anchor" href="#classname" aria-label="Permalink to &quot;className?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>className</strong>: <code>string</code></p></blockquote><hr><h3 id="namekey" tabindex="-1">nameKey? <a class="header-anchor" href="#namekey" aria-label="Permalink to &quot;nameKey?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>nameKey</strong>: <code>DataKey</code>&lt;<code>any</code>&gt;</p></blockquote><hr><h3 id="datakey" tabindex="-1">dataKey? <a class="header-anchor" href="#datakey" aria-label="Permalink to &quot;dataKey?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>dataKey</strong>: <code>DataKey</code>&lt;<code>any</code>&gt;</p></blockquote><hr><h3 id="children" tabindex="-1">children? <a class="header-anchor" href="#children" aria-label="Permalink to &quot;children?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>children</strong>: <code>any</code></p></blockquote><hr><h3 id="type" tabindex="-1">type? <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>type</strong>: <code>&quot;flat&quot;</code> | <code>&quot;nest&quot;</code></p></blockquote><hr><h3 id="colorpanel" tabindex="-1">colorPanel? <a class="header-anchor" href="#colorpanel" aria-label="Permalink to &quot;colorPanel?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>colorPanel</strong>: []</p></blockquote><hr><h3 id="nestindexcontent" tabindex="-1">nestIndexContent? <a class="header-anchor" href="#nestindexcontent" aria-label="Permalink to &quot;nestIndexContent?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>nestIndexContent</strong>: <code>ReactElement</code>&lt;<code>unknown</code>, <code>string</code> | <code>JSXElementConstructor</code>&lt;<code>any</code>&gt;&gt; | (<code>item</code>, <code>i</code>) =&gt; <code>any</code></p></blockquote><hr><h3 id="onanimationstart" tabindex="-1">onAnimationStart()? <a class="header-anchor" href="#onanimationstart" aria-label="Permalink to &quot;onAnimationStart()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onAnimationStart</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="onanimationend" tabindex="-1">onAnimationEnd()? <a class="header-anchor" href="#onanimationend" aria-label="Permalink to &quot;onAnimationEnd()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onAnimationEnd</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="onmouseenter" tabindex="-1">onMouseEnter()? <a class="header-anchor" href="#onmouseenter" aria-label="Permalink to &quot;onMouseEnter()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onMouseEnter</strong>: (<code>node</code>, <code>e</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>node</code></td><td><code>TreemapNode</code></td></tr><tr><td><code>e</code></td><td><code>any</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="onmouseleave" tabindex="-1">onMouseLeave()? <a class="header-anchor" href="#onmouseleave" aria-label="Permalink to &quot;onMouseLeave()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onMouseLeave</strong>: (<code>node</code>, <code>e</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>node</code></td><td><code>TreemapNode</code></td></tr><tr><td><code>e</code></td><td><code>any</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="onclick" tabindex="-1">onClick()? <a class="header-anchor" href="#onclick" aria-label="Permalink to &quot;onClick()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onClick</strong>: (<code>node</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>node</code></td><td><code>TreemapNode</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="isanimationactive" tabindex="-1">isAnimationActive? <a class="header-anchor" href="#isanimationactive" aria-label="Permalink to &quot;isAnimationActive?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>isAnimationActive</strong>: <code>boolean</code></p></blockquote><hr><h3 id="isupdateanimationactive" tabindex="-1">isUpdateAnimationActive? <a class="header-anchor" href="#isupdateanimationactive" aria-label="Permalink to &quot;isUpdateAnimationActive?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>isUpdateAnimationActive</strong>: <code>boolean</code></p></blockquote><hr><h3 id="animationbegin" tabindex="-1">animationBegin? <a class="header-anchor" href="#animationbegin" aria-label="Permalink to &quot;animationBegin?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>animationBegin</strong>: <code>number</code></p></blockquote><hr><h3 id="animationduration" tabindex="-1">animationDuration? <a class="header-anchor" href="#animationduration" aria-label="Permalink to &quot;animationDuration?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>animationDuration</strong>: <code>number</code></p></blockquote><hr><h3 id="animationeasing" tabindex="-1">animationEasing? <a class="header-anchor" href="#animationeasing" aria-label="Permalink to &quot;animationEasing?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>animationEasing</strong>: <code>AnimationTiming</code></p></blockquote>',97)])])}const b=o(n,[["render",d]]);export{p as __pageData,b as default};
