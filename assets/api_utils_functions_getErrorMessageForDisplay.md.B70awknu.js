import{_ as a,c as t,o as s,ag as r}from"./chunks/framework.B-XtCDNB.js";const g=JSON.parse('{"title":"Function: getErrorMessageForDisplay()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/utils/functions/getErrorMessageForDisplay.html"}]]},"headers":[],"relativePath":"api/utils/functions/getErrorMessageForDisplay.md","filePath":"api/utils/functions/getErrorMessageForDisplay.md"}'),i={name:"api/utils/functions/getErrorMessageForDisplay.md"};function o(n,e,l,d,p,h){return s(),t("div",null,[...e[0]||(e[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/utils/functions/getErrorMessageForDisplay.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/utils</a> / getErrorMessageForDisplay</p><h1 id="function-geterrormessagefordisplay" tabindex="-1">Function: getErrorMessageForDisplay() <a class="header-anchor" href="#function-geterrormessagefordisplay" aria-label="Permalink to &quot;Function: getErrorMessageForDisplay()&quot;">​</a></h1><blockquote><p><strong>getErrorMessageForDisplay</strong>(<code>e</code>): <code>string</code></p></blockquote><p>Extracts and formats an error message for display, removing common prefixes and truncating at first newline</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>e</code></td><td><code>unknown</code></td><td>Error object or any other value that can be converted to string</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>Cleaned up error message string</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getErrorMessageForDisplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Query failed: Error: Invalid syntax</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">More details...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Invalid syntax&quot;</span></span></code></pre></div>',12)])])}const u=a(i,[["render",o]]);export{g as __pageData,u as default};
