import{_ as e,c as r,o,ag as d}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"Function: getSqlErrorWithPointer()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/duckdb/functions/getSqlErrorWithPointer.html"}]]},"headers":[],"relativePath":"api/duckdb/functions/getSqlErrorWithPointer.md","filePath":"api/duckdb/functions/getSqlErrorWithPointer.md"}'),n={name:"api/duckdb/functions/getSqlErrorWithPointer.md"};function a(i,t,c,l,s,h){return o(),r("div",null,[...t[0]||(t[0]=[d('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/duckdb/functions/getSqlErrorWithPointer.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/duckdb</a> / getSqlErrorWithPointer</p><h1 id="function-getsqlerrorwithpointer" tabindex="-1">Function: getSqlErrorWithPointer() <a class="header-anchor" href="#function-getsqlerrorwithpointer" aria-label="Permalink to &quot;Function: getSqlErrorWithPointer()&quot;">​</a></h1><blockquote><p><strong>getSqlErrorWithPointer</strong>(<code>query</code>, <code>position</code>): <code>object</code></p></blockquote><p>Function given a query and position finds the line and column of the console.error();</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td><code>string</code></td><td>The query to parse</td></tr><tr><td><code>position</code></td><td><code>number</code></td><td>The position of the error</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><p>The line and column of the error</p><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="line"></a> <code>line</code></td><td><code>number</code></td></tr><tr><td><a id="column"></a> <code>column</code></td><td><code>number</code></td></tr><tr><td><a id="linetext"></a> <code>lineText</code></td><td><code>string</code></td></tr><tr><td><a id="pointerline"></a> <code>pointerLine</code></td><td><code>string</code></td></tr><tr><td><a id="formatted"></a> <code>formatted</code></td><td><code>string</code></td></tr></tbody></table>',11)])])}const m=e(n,[["render",a]]);export{p as __pageData,m as default};
