import{_ as i,c as e,o as a,ag as t}from"./chunks/framework.B-XtCDNB.js";const k=JSON.parse('{"title":"Function: S3FileBrowser()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/s3-browser/functions/S3FileBrowser.html"}]]},"headers":[],"relativePath":"api/s3-browser/functions/S3FileBrowser.md","filePath":"api/s3-browser/functions/S3FileBrowser.md"}'),n={name:"api/s3-browser/functions/S3FileBrowser.md"};function d(l,s,r,o,h,p){return a(),e("div",null,[...s[0]||(s[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/s3-browser/functions/S3FileBrowser.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/s3-browser</a> / S3FileBrowser</p><h1 id="function-s3filebrowser" tabindex="-1">Function: S3FileBrowser() <a class="header-anchor" href="#function-s3filebrowser" aria-label="Permalink to &quot;Function: S3FileBrowser()&quot;">​</a></h1><blockquote><p><strong>S3FileBrowser</strong>(<code>props</code>): <code>ReactNode</code> | <code>Promise</code>&lt;<code>ReactNode</code>&gt;</p></blockquote><p>A file browser component for navigating and selecting files from an S3-like storage.</p><p>This component provides a familiar file explorer interface with features like:</p><ul><li>Directory navigation with breadcrumbs</li><li>File and directory listing</li><li>Multiple file selection</li><li>File metadata display (size, type, last modified)</li></ul><p><img src="https://github.com/user-attachments/assets/dd79fbb9-c487-4050-96ef-81cff39930d3" alt="S3 File Browser Interface"></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>props</code></td><td>{ <code>files</code>: ({ <code>key</code>: <code>string</code>; <code>isDirectory</code>: <code>true</code>; } | { <code>key</code>: <code>string</code>; <code>isDirectory</code>: <code>false</code>; <code>lastModified</code>: <code>Date</code>; <code>size</code>: <code>number</code>; <code>contentType</code>: <code>string</code>; })[]; <code>selectedFiles</code>: <code>string</code>[]; <code>selectedDirectory</code>: <code>string</code>; <code>onCanConfirmChange</code>: (<code>canConfirm</code>) =&gt; <code>void</code>; <code>onChangeSelectedDirectory</code>: (<code>directory</code>) =&gt; <code>void</code>; <code>onChangeSelectedFiles</code>: (<code>files</code>) =&gt; <code>void</code>; }</td><td>The component props</td></tr><tr><td><code>props.files</code>?</td><td>({ <code>key</code>: <code>string</code>; <code>isDirectory</code>: <code>true</code>; } | { <code>key</code>: <code>string</code>; <code>isDirectory</code>: <code>false</code>; <code>lastModified</code>: <code>Date</code>; <code>size</code>: <code>number</code>; <code>contentType</code>: <code>string</code>; })[]</td><td>Array of files and directories to display</td></tr><tr><td><code>props.selectedFiles</code></td><td><code>string</code>[]</td><td>Array of currently selected file keys</td></tr><tr><td><code>props.selectedDirectory</code></td><td><code>string</code></td><td>Current directory path (empty string for root)</td></tr><tr><td><code>props.onCanConfirmChange</code></td><td>(<code>canConfirm</code>) =&gt; <code>void</code></td><td>Callback fired when selection state changes</td></tr><tr><td><code>props.onChangeSelectedDirectory</code></td><td>(<code>directory</code>) =&gt; <code>void</code></td><td>Callback fired when directory navigation occurs</td></tr><tr><td><code>props.onChangeSelectedFiles</code></td><td>(<code>files</code>) =&gt; <code>void</code></td><td>Callback fired when file selection changes</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>ReactNode</code> | <code>Promise</code>&lt;<code>ReactNode</code>&gt;</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selectedFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setSelectedFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt;([]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selectedDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setSelectedDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S3FileBrowser</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    files</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { key: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;documents&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isDirectory: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        key: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        isDirectory: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        size: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        contentType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text/plain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        lastModified: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    selectedFiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{selectedFiles}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    selectedDirectory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{selectedDirectory}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onCanConfirmChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">canConfirm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Can confirm:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, canConfirm)}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onChangeSelectedDirectory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{setSelectedDirectory}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onChangeSelectedFiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{setSelectedFiles}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,14)])])}const E=i(n,[["render",d]]);export{k as __pageData,E as default};
