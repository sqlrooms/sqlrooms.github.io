import{_ as o,c as d,o as c,ag as t}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Function: createDefaultBaseRoomConfig()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/room-store/functions/createDefaultBaseRoomConfig.html"}]]},"headers":[],"relativePath":"api/room-store/functions/createDefaultBaseRoomConfig.md","filePath":"api/room-store/functions/createDefaultBaseRoomConfig.md"}'),a={name:"api/room-store/functions/createDefaultBaseRoomConfig.md"};function n(r,e,s,i,u,l){return c(),d("div",null,[...e[0]||(e[0]=[t('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/room-store/functions/createDefaultBaseRoomConfig.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/room-store</a> / createDefaultBaseRoomConfig</p><h1 id="function-createdefaultbaseroomconfig" tabindex="-1">Function: createDefaultBaseRoomConfig() <a class="header-anchor" href="#function-createdefaultbaseroomconfig" aria-label="Permalink to &quot;Function: createDefaultBaseRoomConfig()&quot;">​</a></h1><blockquote><p><strong>createDefaultBaseRoomConfig</strong>(): <code>object</code></p></blockquote><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="title"></a> <code>title</code></td><td><code>string</code></td></tr><tr><td><a id="description"></a> <code>description</code>?</td><td><code>null</code> | <code>string</code></td></tr><tr><td><a id="layout"></a> <code>layout</code></td><td>{ <code>type</code>: <code>&quot;mosaic&quot;</code>; <code>nodes</code>: <code>null</code> | <code>string</code> | <a href="./../type-aliases/MosaicLayoutParent.html"><code>MosaicLayoutParent</code></a>; <code>pinned</code>: <code>string</code>[]; <code>fixed</code>: <code>string</code>[]; }</td></tr><tr><td><a id="datasources"></a> <code>dataSources</code></td><td>({ <code>tableName</code>: <code>string</code>; <code>type</code>: <code>&quot;file&quot;</code>; <code>fileName</code>: <code>string</code>; <code>loadOptions</code>: { <code>[key: string]</code>: <code>unknown</code>; <code>schema</code>: <code>string</code>; <code>select</code>: <code>string</code>[]; <code>where</code>: <code>string</code>; <code>view</code>: <code>boolean</code>; <code>temp</code>: <code>boolean</code>; <code>replace</code>: <code>boolean</code>; <code>method</code>: <code>&quot;read_json&quot;</code> | <code>&quot;read_ndjson&quot;</code> | <code>&quot;read_parquet&quot;</code> | <code>&quot;read_csv&quot;</code> | <code>&quot;auto&quot;</code>; } | { <code>[key: string]</code>: <code>unknown</code>; <code>schema</code>: <code>string</code>; <code>select</code>: <code>string</code>[]; <code>where</code>: <code>string</code>; <code>view</code>: <code>boolean</code>; <code>temp</code>: <code>boolean</code>; <code>replace</code>: <code>boolean</code>; <code>options</code>: <code>string</code> | <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; | <code>string</code>[]; <code>method</code>: <code>&quot;st_read&quot;</code>; }; } | { <code>tableName</code>: <code>string</code>; <code>type</code>: <code>&quot;url&quot;</code>; <code>url</code>: <code>string</code>; <code>loadOptions</code>: { <code>[key: string]</code>: <code>unknown</code>; <code>schema</code>: <code>string</code>; <code>select</code>: <code>string</code>[]; <code>where</code>: <code>string</code>; <code>view</code>: <code>boolean</code>; <code>temp</code>: <code>boolean</code>; <code>replace</code>: <code>boolean</code>; <code>method</code>: <code>&quot;read_json&quot;</code> | <code>&quot;read_ndjson&quot;</code> | <code>&quot;read_parquet&quot;</code> | <code>&quot;read_csv&quot;</code> | <code>&quot;auto&quot;</code>; } | { <code>[key: string]</code>: <code>unknown</code>; <code>schema</code>: <code>string</code>; <code>select</code>: <code>string</code>[]; <code>where</code>: <code>string</code>; <code>view</code>: <code>boolean</code>; <code>temp</code>: <code>boolean</code>; <code>replace</code>: <code>boolean</code>; <code>options</code>: <code>string</code> | <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt; | <code>string</code>[]; <code>method</code>: <code>&quot;st_read&quot;</code>; }; <code>httpMethod</code>: <code>string</code>; <code>headers</code>: <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;; } | { <code>tableName</code>: <code>string</code>; <code>type</code>: <code>&quot;sql&quot;</code>; <code>sqlQuery</code>: <code>string</code>; })[]</td></tr></tbody></table>',7)])])}const f=o(a,[["render",n]]);export{m as __pageData,f as default};
