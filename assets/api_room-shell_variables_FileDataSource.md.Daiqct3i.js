import{_ as e,c as d,o as c,ag as t}from"./chunks/framework.B-XtCDNB.js";const z=JSON.parse('{"title":"Variable: FileDataSource","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/room-shell/variables/FileDataSource.html"}]]},"headers":[],"relativePath":"api/room-shell/variables/FileDataSource.md","filePath":"api/room-shell/variables/FileDataSource.md"}'),a={name:"api/room-shell/variables/FileDataSource.md"};function l(r,o,i,n,s,p){return c(),d("div",null,[...o[0]||(o[0]=[t('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/room-shell/variables/FileDataSource.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/room-shell</a> / FileDataSource</p><h1 id="variable-filedatasource" tabindex="-1">Variable: FileDataSource <a class="header-anchor" href="#variable-filedatasource" aria-label="Permalink to &quot;Variable: FileDataSource&quot;">â€‹</a></h1><blockquote><p><code>const</code> <strong>FileDataSource</strong>: <code>z.ZodObject</code>&lt;{ <code>tableName</code>: <code>z.ZodString</code>; <code>type</code>: <code>z.ZodLiteral</code>&lt;<code>&quot;file&quot;</code>&gt;; <code>fileName</code>: <code>z.ZodString</code>; <code>loadOptions</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodDiscriminatedUnion</code>&lt;[<code>z.ZodObject</code>&lt;{ <code>schema</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodString</code>&gt;; <code>select</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodArray</code>&lt;<code>z.ZodString</code>&gt;&gt;; <code>where</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodString</code>&gt;; <code>view</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodBoolean</code>&gt;; <code>temp</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodBoolean</code>&gt;; <code>replace</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodBoolean</code>&gt;; <code>method</code>: <code>z.ZodEnum</code>&lt;{ <code>read_json</code>: <code>&quot;read_json&quot;</code>; <code>read_ndjson</code>: <code>&quot;read_ndjson&quot;</code>; <code>read_parquet</code>: <code>&quot;read_parquet&quot;</code>; <code>read_csv</code>: <code>&quot;read_csv&quot;</code>; <code>auto</code>: <code>&quot;auto&quot;</code>; }&gt;; }, <code>z.core.$catchall</code>&lt;<code>z.ZodUnknown</code>&gt;&gt;, <code>z.ZodObject</code>&lt;{ <code>schema</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodString</code>&gt;; <code>select</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodArray</code>&lt;<code>z.ZodString</code>&gt;&gt;; <code>where</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodString</code>&gt;; <code>view</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodBoolean</code>&gt;; <code>temp</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodBoolean</code>&gt;; <code>replace</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodBoolean</code>&gt;; <code>options</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodUnion</code>&lt;readonly [..., ..., ...]&gt;&gt;; <code>method</code>: <code>z.ZodLiteral</code>&lt;<code>&quot;st_read&quot;</code>&gt;; }, <code>z.core.$catchall</code>&lt;<code>z.ZodUnknown</code>&gt;&gt;], <code>&quot;method&quot;</code>&gt;&gt;; }, <code>z.core.$strip</code>&gt;</p></blockquote><p><strong><code>Interface</code></strong></p><p>Configuration for file-based data sources FileDataSource</p>',6)])])}const g=e(a,[["render",l]]);export{z as __pageData,g as default};
