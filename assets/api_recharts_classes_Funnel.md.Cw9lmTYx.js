import{_ as t,c as o,o as a,ag as r}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Class: Funnel","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/recharts/classes/Funnel.html"}]]},"headers":[],"relativePath":"api/recharts/classes/Funnel.md","filePath":"api/recharts/classes/Funnel.md"}'),d={name:"api/recharts/classes/Funnel.md"};function n(c,e,i,l,s,h){return a(),o("div",null,[...e[0]||(e[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/recharts/classes/Funnel.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/recharts</a> / Funnel</p><h1 id="class-funnel" tabindex="-1">Class: Funnel <a class="header-anchor" href="#class-funnel" aria-label="Permalink to &quot;Class: Funnel&quot;">​</a></h1><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><code>PureComponent</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>, <code>State</code>&gt;</li></ul><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="new-funnel" tabindex="-1">new Funnel() <a class="header-anchor" href="#new-funnel" aria-label="Permalink to &quot;new Funnel()&quot;">​</a></h3><blockquote><p><strong>new Funnel</strong>(<code>props</code>): <a href="./Funnel.html"><code>Funnel</code></a></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>props</code></td><td><a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Funnel.html"><code>Funnel</code></a></p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent&lt;FunnelProps, State&gt;.constructor</code></p><h3 id="new-funnel-1" tabindex="-1">new Funnel() <a class="header-anchor" href="#new-funnel-1" aria-label="Permalink to &quot;new Funnel()&quot;">​</a></h3><blockquote><p><strong>new Funnel</strong>(<code>props</code>, <code>context</code>): <a href="./Funnel.html"><code>Funnel</code></a></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>props</code></td><td><a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a></td><td></td></tr><tr><td><code>context</code></td><td><code>any</code></td><td>value of the parent <a href="https://react.dev/reference/react/Component#context" target="_blank" rel="noreferrer">Context</a> specified in <code>contextType</code>.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Funnel.html"><code>Funnel</code></a></p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent&lt;FunnelProps, State&gt;.constructor</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Modifier</th><th>Type</th><th>Description</th><th>Overrides</th><th>Inherited from</th></tr></thead><tbody><tr><td><a id="contexttype"></a> <code>contextType?</code></td><td><code>static</code></td><td><code>Context</code>&lt;<code>any</code>&gt;</td><td>If set, <code>this.context</code> will be set at runtime to the current value of the given Context. <strong>Example</strong> <code>type MyContext = number const Ctx = React.createContext&lt;MyContext&gt;(0) class Foo extends React.Component { static contextType = Ctx context!: React.ContextType&lt;typeof Ctx&gt; render () { return &lt;&gt;My context&#39;s value: {this.context}&lt;/&gt;; } }</code> <strong>See</strong> <a href="https://react.dev/reference/react/Component#static-contexttype" target="_blank" rel="noreferrer">https://react.dev/reference/react/Component#static-contexttype</a></td><td>-</td><td><code>PureComponent.contextType</code></td></tr><tr><td><a id="proptypes"></a> <s><code>propTypes?</code></s></td><td><code>static</code></td><td><code>any</code></td><td>Ignored by React. <strong>Deprecated</strong> Only kept in types for backwards compatibility. Will be removed in a future major release.</td><td>-</td><td><code>PureComponent.propTypes</code></td></tr><tr><td><a id="context-1"></a> <code>context</code></td><td><code>public</code></td><td><code>unknown</code></td><td>If using React Context, re-declare this in your class to be the <code>React.ContextType</code> of your <code>static contextType</code>. Should be used with type annotation or static contextType. <strong>Example</strong> <code>static contextType = MyContext // For TS pre-3.7: context!: React.ContextType&lt;typeof MyContext&gt; // For TS 3.7 and above: declare context: React.ContextType&lt;typeof MyContext&gt;</code> <strong>See</strong> <a href="https://react.dev/reference/react/Component#context" target="_blank" rel="noreferrer">React Docs</a></td><td>-</td><td><code>PureComponent.context</code></td></tr><tr><td><a id="props-2"></a> <code>props</code></td><td><code>readonly</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td><td>-</td><td>-</td><td><code>PureComponent.props</code></td></tr><tr><td><a id="displayname"></a> <code>displayName</code></td><td><code>static</code></td><td><code>string</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><a id="defaultprops"></a> <code>defaultProps</code></td><td><code>static</code></td><td><code>object</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.stroke</code></td><td><code>public</code></td><td><code>string</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.fill</code></td><td><code>public</code></td><td><code>string</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.legendType</code></td><td><code>public</code></td><td><code>string</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.labelLine</code></td><td><code>public</code></td><td><code>boolean</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.hide</code></td><td><code>public</code></td><td><code>boolean</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.isAnimationActive</code></td><td><code>public</code></td><td><code>boolean</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.animationBegin</code></td><td><code>public</code></td><td><code>number</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.animationDuration</code></td><td><code>public</code></td><td><code>number</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.animationEasing</code></td><td><code>public</code></td><td><code>string</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.nameKey</code></td><td><code>public</code></td><td><code>string</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><code>defaultProps.lastShapeType</code></td><td><code>public</code></td><td><code>string</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><a id="getrealfunneldata"></a> <code>getRealFunnelData</code></td><td><code>static</code></td><td>(<code>item</code>: <a href="./Funnel.html"><code>Funnel</code></a>) =&gt; <code>any</code>[]</td><td>-</td><td>-</td><td>-</td></tr><tr><td><a id="getrealwidthheight"></a> <code>getRealWidthHeight</code></td><td><code>static</code></td><td>(<code>item</code>: <a href="./Funnel.html"><code>Funnel</code></a>, <code>offset</code>: <code>ChartOffset</code>) =&gt; <code>object</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><a id="getcomposeddata"></a> <code>getComposedData</code></td><td><code>static</code></td><td>(<code>__namedParameters</code>: <code>object</code>) =&gt; <code>object</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><a id="state"></a> <code>state</code></td><td><code>public</code></td><td><code>State</code></td><td>-</td><td><code>PureComponent.state</code></td><td>-</td></tr><tr><td><a id="handleanimationend"></a> <code>handleAnimationEnd</code></td><td><code>public</code></td><td>() =&gt; <code>void</code></td><td>-</td><td>-</td><td>-</td></tr><tr><td><a id="handleanimationstart"></a> <code>handleAnimationStart</code></td><td><code>public</code></td><td>() =&gt; <code>void</code></td><td>-</td><td>-</td><td>-</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="setstate" tabindex="-1">setState() <a class="header-anchor" href="#setstate" aria-label="Permalink to &quot;setState()&quot;">​</a></h3><blockquote><p><strong>setState</strong>&lt;<code>K</code>&gt;(<code>state</code>, <code>callback</code>?): <code>void</code></p></blockquote><h4 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><code>K</code> <em>extends</em> keyof <code>State</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>state</code></td><td><code>null</code> | <code>State</code> | (<code>prevState</code>, <code>props</code>) =&gt; <code>null</code> | <code>State</code> | <code>Pick</code>&lt;<code>State</code>, <code>K</code>&gt; | <code>Pick</code>&lt;<code>State</code>, <code>K</code>&gt;</td></tr><tr><td><code>callback</code>?</td><td>() =&gt; <code>void</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.setState</code></p><hr><h3 id="forceupdate" tabindex="-1">forceUpdate() <a class="header-anchor" href="#forceupdate" aria-label="Permalink to &quot;forceUpdate()&quot;">​</a></h3><blockquote><p><strong>forceUpdate</strong>(<code>callback</code>?): <code>void</code></p></blockquote><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>callback</code>?</td><td>() =&gt; <code>void</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.forceUpdate</code></p><hr><h3 id="componentdidmount" tabindex="-1">componentDidMount()? <a class="header-anchor" href="#componentdidmount" aria-label="Permalink to &quot;componentDidMount()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>componentDidMount</strong>(): <code>void</code></p></blockquote><p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.componentDidMount</code></p><hr><h3 id="shouldcomponentupdate" tabindex="-1">shouldComponentUpdate()? <a class="header-anchor" href="#shouldcomponentupdate" aria-label="Permalink to &quot;shouldComponentUpdate()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>shouldComponentUpdate</strong>(<code>nextProps</code>, <code>nextState</code>, <code>nextContext</code>): <code>boolean</code></p></blockquote><p>Called to determine whether the change in props and state should trigger a re-render.</p><p><code>Component</code> always returns true. <code>PureComponent</code> implements a shallow comparison on props and state and returns true if any props or states have changed.</p><p>If false is returned, Component.render, <code>componentWillUpdate</code> and <code>componentDidUpdate</code> will not be called.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>nextProps</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td></tr><tr><td><code>nextState</code></td><td><code>Readonly</code>&lt;<code>State</code>&gt;</td></tr><tr><td><code>nextContext</code></td><td><code>any</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-5" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-5" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.shouldComponentUpdate</code></p><hr><h3 id="componentwillunmount" tabindex="-1">componentWillUnmount()? <a class="header-anchor" href="#componentwillunmount" aria-label="Permalink to &quot;componentWillUnmount()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>componentWillUnmount</strong>(): <code>void</code></p></blockquote><p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as cancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-6" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-6" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.componentWillUnmount</code></p><hr><h3 id="componentdidcatch" tabindex="-1">componentDidCatch()? <a class="header-anchor" href="#componentdidcatch" aria-label="Permalink to &quot;componentDidCatch()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>componentDidCatch</strong>(<code>error</code>, <code>errorInfo</code>): <code>void</code></p></blockquote><p>Catches exceptions generated in descendant components. Unhandled exceptions will cause the entire component tree to unmount.</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>error</code></td><td><code>Error</code></td></tr><tr><td><code>errorInfo</code></td><td><code>ErrorInfo</code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-7" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-7" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.componentDidCatch</code></p><hr><h3 id="getsnapshotbeforeupdate" tabindex="-1">getSnapshotBeforeUpdate()? <a class="header-anchor" href="#getsnapshotbeforeupdate" aria-label="Permalink to &quot;getSnapshotBeforeUpdate()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>getSnapshotBeforeUpdate</strong>(<code>prevProps</code>, <code>prevState</code>): <code>any</code></p></blockquote><p>Runs before React applies the result of Component.render render to the document, and returns an object to be given to <a href="./Funnel.html#componentdidupdate">componentDidUpdate</a>. Useful for saving things such as scroll position before Component.render render causes changes to it.</p><p>Note: the presence of this method prevents any of the deprecated lifecycle events from running.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>prevProps</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td></tr><tr><td><code>prevState</code></td><td><code>Readonly</code>&lt;<code>State</code>&gt;</td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><h4 id="inherited-from-8" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-8" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.getSnapshotBeforeUpdate</code></p><hr><h3 id="componentdidupdate" tabindex="-1">componentDidUpdate()? <a class="header-anchor" href="#componentdidupdate" aria-label="Permalink to &quot;componentDidUpdate()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>componentDidUpdate</strong>(<code>prevProps</code>, <code>prevState</code>, <code>snapshot</code>?): <code>void</code></p></blockquote><p>Called immediately after updating occurs. Not called for the initial render.</p><p>The snapshot is only present if <a href="./Funnel.html#getsnapshotbeforeupdate">getSnapshotBeforeUpdate</a> is present and returns non-null.</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>prevProps</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td></tr><tr><td><code>prevState</code></td><td><code>Readonly</code>&lt;<code>State</code>&gt;</td></tr><tr><td><code>snapshot</code>?</td><td><code>any</code></td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-9" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-9" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.componentDidUpdate</code></p><hr><h3 id="componentwillmount" tabindex="-1"><s>componentWillMount()?</s> <a class="header-anchor" href="#componentwillmount" aria-label="Permalink to &quot;~~componentWillMount()?~~&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>componentWillMount</strong>(): <code>void</code></p></blockquote><p>Called immediately before mounting occurs, and before Component.render. Avoid introducing any side-effects or subscriptions in this method.</p><p>Note: the presence of NewLifecycle.getSnapshotBeforeUpdate getSnapshotBeforeUpdate or StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps prevents this from being invoked.</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>16.3, use ComponentLifecycle.componentDidMount componentDidMount or the constructor instead; will stop working in React 17</p><h4 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h4><ul><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state</a></li><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li></ul><h4 id="inherited-from-10" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-10" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.componentWillMount</code></p><hr><h3 id="unsafe-componentwillmount" tabindex="-1"><s>UNSAFE_componentWillMount()?</s> <a class="header-anchor" href="#unsafe-componentwillmount" aria-label="Permalink to &quot;~~UNSAFE\\_componentWillMount()?~~&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>UNSAFE_componentWillMount</strong>(): <code>void</code></p></blockquote><p>Called immediately before mounting occurs, and before Component.render. Avoid introducing any side-effects or subscriptions in this method.</p><p>This method will not stop working in React 17.</p><p>Note: the presence of NewLifecycle.getSnapshotBeforeUpdate getSnapshotBeforeUpdate or StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps prevents this from being invoked.</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated-1" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated-1" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>16.3, use ComponentLifecycle.componentDidMount componentDidMount or the constructor instead</p><h4 id="see-1" tabindex="-1">See <a class="header-anchor" href="#see-1" aria-label="Permalink to &quot;See&quot;">​</a></h4><ul><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state</a></li><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li></ul><h4 id="inherited-from-11" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-11" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.UNSAFE_componentWillMount</code></p><hr><h3 id="componentwillreceiveprops" tabindex="-1"><s>componentWillReceiveProps()?</s> <a class="header-anchor" href="#componentwillreceiveprops" aria-label="Permalink to &quot;~~componentWillReceiveProps()?~~&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>componentWillReceiveProps</strong>(<code>nextProps</code>, <code>nextContext</code>): <code>void</code></p></blockquote><p>Called when the component may be receiving new props. React may call this even if props have not changed, so be sure to compare new and existing props if you only want to handle changes.</p><p>Calling Component.setState generally does not trigger this method.</p><p>Note: the presence of NewLifecycle.getSnapshotBeforeUpdate getSnapshotBeforeUpdate or StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps prevents this from being invoked.</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>nextProps</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td></tr><tr><td><code>nextContext</code></td><td><code>any</code></td></tr></tbody></table><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated-2" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated-2" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>16.3, use static StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps instead; will stop working in React 17</p><h4 id="see-2" tabindex="-1">See <a class="header-anchor" href="#see-2" aria-label="Permalink to &quot;See&quot;">​</a></h4><ul><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props</a></li><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li></ul><h4 id="inherited-from-12" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-12" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.componentWillReceiveProps</code></p><hr><h3 id="unsafe-componentwillreceiveprops" tabindex="-1"><s>UNSAFE_componentWillReceiveProps()?</s> <a class="header-anchor" href="#unsafe-componentwillreceiveprops" aria-label="Permalink to &quot;~~UNSAFE\\_componentWillReceiveProps()?~~&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>UNSAFE_componentWillReceiveProps</strong>(<code>nextProps</code>, <code>nextContext</code>): <code>void</code></p></blockquote><p>Called when the component may be receiving new props. React may call this even if props have not changed, so be sure to compare new and existing props if you only want to handle changes.</p><p>Calling Component.setState generally does not trigger this method.</p><p>This method will not stop working in React 17.</p><p>Note: the presence of NewLifecycle.getSnapshotBeforeUpdate getSnapshotBeforeUpdate or StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps prevents this from being invoked.</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>nextProps</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td></tr><tr><td><code>nextContext</code></td><td><code>any</code></td></tr></tbody></table><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated-3" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated-3" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>16.3, use static StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps instead</p><h4 id="see-3" tabindex="-1">See <a class="header-anchor" href="#see-3" aria-label="Permalink to &quot;See&quot;">​</a></h4><ul><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props</a></li><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li></ul><h4 id="inherited-from-13" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-13" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.UNSAFE_componentWillReceiveProps</code></p><hr><h3 id="componentwillupdate" tabindex="-1"><s>componentWillUpdate()?</s> <a class="header-anchor" href="#componentwillupdate" aria-label="Permalink to &quot;~~componentWillUpdate()?~~&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>componentWillUpdate</strong>(<code>nextProps</code>, <code>nextState</code>, <code>nextContext</code>): <code>void</code></p></blockquote><p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p><p>Note: You cannot call Component.setState here.</p><p>Note: the presence of NewLifecycle.getSnapshotBeforeUpdate getSnapshotBeforeUpdate or StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps prevents this from being invoked.</p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>nextProps</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td></tr><tr><td><code>nextState</code></td><td><code>Readonly</code>&lt;<code>State</code>&gt;</td></tr><tr><td><code>nextContext</code></td><td><code>any</code></td></tr></tbody></table><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated-4" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated-4" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17</p><h4 id="see-4" tabindex="-1">See <a class="header-anchor" href="#see-4" aria-label="Permalink to &quot;See&quot;">​</a></h4><ul><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update</a></li><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li></ul><h4 id="inherited-from-14" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-14" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.componentWillUpdate</code></p><hr><h3 id="unsafe-componentwillupdate" tabindex="-1"><s>UNSAFE_componentWillUpdate()?</s> <a class="header-anchor" href="#unsafe-componentwillupdate" aria-label="Permalink to &quot;~~UNSAFE\\_componentWillUpdate()?~~&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>UNSAFE_componentWillUpdate</strong>(<code>nextProps</code>, <code>nextState</code>, <code>nextContext</code>): <code>void</code></p></blockquote><p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p><p>Note: You cannot call Component.setState here.</p><p>This method will not stop working in React 17.</p><p>Note: the presence of NewLifecycle.getSnapshotBeforeUpdate getSnapshotBeforeUpdate or StaticLifecycle.getDerivedStateFromProps getDerivedStateFromProps prevents this from being invoked.</p><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>nextProps</code></td><td><code>Readonly</code>&lt;<a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a>&gt;</td></tr><tr><td><code>nextState</code></td><td><code>Readonly</code>&lt;<code>State</code>&gt;</td></tr><tr><td><code>nextContext</code></td><td><code>any</code></td></tr></tbody></table><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="deprecated-5" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated-5" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h4><p>16.3, use getSnapshotBeforeUpdate instead</p><h4 id="see-5" tabindex="-1">See <a class="header-anchor" href="#see-5" aria-label="Permalink to &quot;See&quot;">​</a></h4><ul><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update</a></li><li><a href="https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path" target="_blank" rel="noreferrer">https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li></ul><h4 id="inherited-from-15" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-15" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>PureComponent.UNSAFE_componentWillUpdate</code></p><hr><h3 id="getderivedstatefromprops" tabindex="-1">getDerivedStateFromProps() <a class="header-anchor" href="#getderivedstatefromprops" aria-label="Permalink to &quot;getDerivedStateFromProps()&quot;">​</a></h3><blockquote><p><code>static</code> <strong>getDerivedStateFromProps</strong>(<code>nextProps</code>, <code>prevState</code>): <code>State</code></p></blockquote><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>nextProps</code></td><td><a href="./../type-aliases/FunnelProps.html"><code>FunnelProps</code></a></td></tr><tr><td><code>prevState</code></td><td><code>State</code></td></tr></tbody></table><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>State</code></p><hr><h3 id="isactiveindex" tabindex="-1">isActiveIndex() <a class="header-anchor" href="#isactiveindex" aria-label="Permalink to &quot;isActiveIndex()&quot;">​</a></h3><blockquote><p><strong>isActiveIndex</strong>(<code>i</code>): <code>boolean</code></p></blockquote><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>i</code></td><td><code>number</code></td></tr></tbody></table><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><hr><h3 id="rendertrapezoidsstatically" tabindex="-1">renderTrapezoidsStatically() <a class="header-anchor" href="#rendertrapezoidsstatically" aria-label="Permalink to &quot;renderTrapezoidsStatically()&quot;">​</a></h3><blockquote><p><strong>renderTrapezoidsStatically</strong>(<code>trapezoids</code>): <code>Element</code>[]</p></blockquote><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>trapezoids</code></td><td><code>FunnelTrapezoidItem</code>[]</td></tr></tbody></table><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Element</code>[]</p><hr><h3 id="rendertrapezoidswithanimation" tabindex="-1">renderTrapezoidsWithAnimation() <a class="header-anchor" href="#rendertrapezoidswithanimation" aria-label="Permalink to &quot;renderTrapezoidsWithAnimation()&quot;">​</a></h3><blockquote><p><strong>renderTrapezoidsWithAnimation</strong>(): <code>Element</code></p></blockquote><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Element</code></p><hr><h3 id="rendertrapezoids" tabindex="-1">renderTrapezoids() <a class="header-anchor" href="#rendertrapezoids" aria-label="Permalink to &quot;renderTrapezoids()&quot;">​</a></h3><blockquote><p><strong>renderTrapezoids</strong>(): <code>Element</code> | <code>Element</code>[]</p></blockquote><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Element</code> | <code>Element</code>[]</p><hr><h3 id="render" tabindex="-1">render() <a class="header-anchor" href="#render" aria-label="Permalink to &quot;render()&quot;">​</a></h3><blockquote><p><strong>render</strong>(): <code>Element</code></p></blockquote><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Element</code></p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><code>PureComponent.render</code></p>',235)])])}const m=t(d,[["render",n]]);export{u as __pageData,m as default};
