import{_ as a,c as i,o as n,ag as t}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"@sqlrooms/room-config","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/room-config/"}]]},"headers":[],"relativePath":"api/room-config/index.md","filePath":"api/room-config/index.md"}'),l={name:"api/room-config/index.md"};function e(h,s,o,p,r,k){return n(),i("div",null,[...s[0]||(s[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/room-config.md for this page in Markdown format</div><h1 id="sqlrooms-room-config" tabindex="-1">@sqlrooms/room-config <a class="header-anchor" href="#sqlrooms-room-config" aria-label="Permalink to &quot;@sqlrooms/room-config&quot;">‚Äã</a></h1><p>A central configuration and type definitions package that maintains base room configuration schemas and Zod schema definitions. It provides TypeScript types and interfaces along with essential constants and utilities used throughout the framework.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">‚Äã</a></h2><ul><li>üìù <strong>Room Configuration</strong>: Define and manage room configuration schemas</li><li>üîç <strong>Type Safety</strong>: Strong TypeScript typing for configuration objects</li><li>‚úÖ <strong>Validation</strong>: Zod schemas for runtime validation of configuration</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">‚Äã</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @sqlrooms/room-config</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @sqlrooms/room-config</span></span></code></pre></div><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">‚Äã</a></h2><h3 id="working-with-base-room-configuration" tabindex="-1">Working with Base Room Configuration <a class="header-anchor" href="#working-with-base-room-configuration" aria-label="Permalink to &quot;Working with Base Room Configuration&quot;">‚Äã</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {BaseRoomConfig} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sqlrooms/room-config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create a new room configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> roomConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseRoomConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My SQL Room&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A data analysis room using SQLRooms&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  settings: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    theme: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dark&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Other settings...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Access configuration properties</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(roomConfig.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;My SQL Room&#39;</span></span></code></pre></div><h3 id="persisting-room-configuration" tabindex="-1">Persisting Room Configuration <a class="header-anchor" href="#persisting-room-configuration" aria-label="Permalink to &quot;Persisting Room Configuration&quot;">‚Äã</a></h3><p>Room configuration is designed to be saved and restored between sessions. Here&#39;s how to use it with Zustand&#39;s persist middleware:</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {persist} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;zustand/middleware&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {createRoomStore, createRoomShellSlice} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sqlrooms/room-shell&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {BaseRoomConfig} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sqlrooms/room-config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create a store with persistence for configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">useRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  persist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createRoomShellSlice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Config is stored at the root level of state for persisting the app state</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        config: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My Room&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // Other configuration properties</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Room object contains panels and runtime-only state</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        room: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          panels: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Panel definitions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })(set, get, store),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;room-config-storage&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Only persist the configuration part of the state</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      partialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        config: state.config,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Access the config in components</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConfigComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Config is accessed directly from state, not from state.room.config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRoomStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.config);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{config.title}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="advanced-features" tabindex="-1">Advanced Features <a class="header-anchor" href="#advanced-features" aria-label="Permalink to &quot;Advanced Features&quot;">‚Äã</a></h2><ul><li><strong>Schema Extensions</strong>: Extend base schemas for custom room types</li><li><strong>Configuration Validation</strong>: Validate configurations at runtime</li><li><strong>Serialization</strong>: Convert configurations to/from JSON for storage</li></ul><p>For more information, visit the SQLRooms documentation.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">‚Äã</a></h2><ul><li><a href="./type-aliases/LayoutTypes.html">LayoutTypes</a></li><li><a href="./type-aliases/MosaicLayoutDirection.html">MosaicLayoutDirection</a></li><li><a href="./type-aliases/MosaicLayoutParent.html">MosaicLayoutParent</a></li><li><a href="./type-aliases/MosaicLayoutNodeKey.html">MosaicLayoutNodeKey</a></li><li><a href="./type-aliases/MosaicLayoutNode.html">MosaicLayoutNode</a></li><li><a href="./type-aliases/MosaicLayoutConfig.html">MosaicLayoutConfig</a></li><li><a href="./type-aliases/LayoutConfig.html">LayoutConfig</a></li><li><a href="./type-aliases/BaseRoomConfig.html">BaseRoomConfig</a></li><li><a href="./type-aliases/DataSourceTypes.html">DataSourceTypes</a></li><li><a href="./type-aliases/BaseDataSource.html">BaseDataSource</a></li><li><a href="./type-aliases/FileDataSource.html">FileDataSource</a></li><li><a href="./type-aliases/UrlDataSource.html">UrlDataSource</a></li><li><a href="./type-aliases/SqlQueryDataSource.html">SqlQueryDataSource</a></li><li><a href="./type-aliases/DataSource.html">DataSource</a></li><li><a href="./type-aliases/LoadFile.html">LoadFile</a></li><li><a href="./type-aliases/StandardLoadOptions.html">StandardLoadOptions</a></li><li><a href="./type-aliases/SpatialLoadOptions.html">SpatialLoadOptions</a></li><li><a href="./type-aliases/SpatialLoadFileOptions.html">SpatialLoadFileOptions</a></li><li><a href="./type-aliases/StandardLoadFileOptions.html">StandardLoadFileOptions</a></li><li><a href="./type-aliases/LoadFileOptions.html">LoadFileOptions</a></li></ul><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">‚Äã</a></h2><ul><li><a href="./variables/MAIN_VIEW.html">MAIN_VIEW</a></li><li><a href="./variables/LayoutTypes.html">LayoutTypes</a></li><li><a href="./variables/DEFAULT_MOSAIC_LAYOUT.html"><s>DEFAULT_MOSAIC_LAYOUT</s></a></li><li><a href="./variables/MosaicLayoutDirection.html">MosaicLayoutDirection</a></li><li><a href="./variables/MosaicLayoutParent.html">MosaicLayoutParent</a></li><li><a href="./variables/MosaicLayoutNodeKey.html">MosaicLayoutNodeKey</a></li><li><a href="./variables/MosaicLayoutNode.html">MosaicLayoutNode</a></li><li><a href="./variables/MosaicLayoutConfig.html">MosaicLayoutConfig</a></li><li><a href="./variables/LayoutConfig.html">LayoutConfig</a></li><li><a href="./variables/DEFAULT_ROOM_TITLE.html">DEFAULT_ROOM_TITLE</a></li><li><a href="./variables/BaseRoomConfig.html">BaseRoomConfig</a></li><li><a href="./variables/DataSourceTypes.html">DataSourceTypes</a></li><li><a href="./variables/BaseDataSource.html">BaseDataSource</a></li><li><a href="./variables/FileDataSource.html">FileDataSource</a></li><li><a href="./variables/UrlDataSource.html">UrlDataSource</a></li><li><a href="./variables/SqlQueryDataSource.html">SqlQueryDataSource</a></li><li><a href="./variables/DataSource.html">DataSource</a></li><li><a href="./variables/LoadFile.html">LoadFile</a></li><li><a href="./variables/StandardLoadOptions.html">StandardLoadOptions</a></li><li><a href="./variables/SpatialLoadOptions.html">SpatialLoadOptions</a></li><li><a href="./variables/SpatialLoadFileOptions.html">SpatialLoadFileOptions</a></li><li><a href="./variables/StandardLoadFileOptions.html">StandardLoadFileOptions</a></li><li><a href="./variables/LoadFileOptions.html">LoadFileOptions</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">‚Äã</a></h2><ul><li><a href="./functions/createDefaultMosaicLayout.html">createDefaultMosaicLayout</a></li><li><a href="./functions/isMosaicLayoutParent.html">isMosaicLayoutParent</a></li><li><a href="./functions/createDefaultBaseRoomConfig.html">createDefaultBaseRoomConfig</a></li><li><a href="./functions/isFileDataSource.html">isFileDataSource</a></li><li><a href="./functions/isUrlDataSource.html">isUrlDataSource</a></li><li><a href="./functions/isSqlQueryDataSource.html">isSqlQueryDataSource</a></li><li><a href="./functions/isSpatialLoadFileOptions.html">isSpatialLoadFileOptions</a></li></ul>`,23)])])}const E=a(l,[["render",e]]);export{c as __pageData,E as default};
