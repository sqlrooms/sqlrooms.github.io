import{_ as a,c as t,o as d,ag as i}from"./chunks/framework.B-XtCDNB.js";const b=JSON.parse('{"title":"Function: makeQualifiedTableName()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/duckdb/functions/makeQualifiedTableName.html"}]]},"headers":[],"relativePath":"api/duckdb/functions/makeQualifiedTableName.md","filePath":"api/duckdb/functions/makeQualifiedTableName.md"}'),o={name:"api/duckdb/functions/makeQualifiedTableName.md"};function r(n,e,c,l,m,s){return d(),t("div",null,[...e[0]||(e[0]=[i('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/duckdb/functions/makeQualifiedTableName.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/duckdb</a> / makeQualifiedTableName</p><h1 id="function-makequalifiedtablename" tabindex="-1">Function: makeQualifiedTableName() <a class="header-anchor" href="#function-makequalifiedtablename" aria-label="Permalink to &quot;Function: makeQualifiedTableName()&quot;">​</a></h1><blockquote><p><strong>makeQualifiedTableName</strong>(<code>__namedParameters</code>): <code>object</code></p></blockquote><p>Get a qualified table name from a table name, schema, and database.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>__namedParameters</code></td><td><a href="./../type-aliases/QualifiedTableName.html"><code>QualifiedTableName</code></a></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><p>The qualified table name.</p><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="database"></a> <code>database</code></td><td><code>undefined</code> | <code>string</code></td></tr><tr><td><a id="schema"></a> <code>schema</code></td><td><code>undefined</code> | <code>string</code></td></tr><tr><td><a id="table"></a> <code>table</code></td><td><code>string</code></td></tr><tr><td><a id="tostring"></a> <code>toString</code></td><td>() =&gt; <code>string</code></td></tr></tbody></table>',11)])])}const f=a(o,[["render",r]]);export{b as __pageData,f as default};
