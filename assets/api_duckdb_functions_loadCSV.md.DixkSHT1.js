import{_ as e,c as d,o,ag as a}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Function: loadCSV()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/duckdb/functions/loadCSV.html"}]]},"headers":[],"relativePath":"api/duckdb/functions/loadCSV.md","filePath":"api/duckdb/functions/loadCSV.md"}'),c={name:"api/duckdb/functions/loadCSV.md"};function r(n,t,i,s,l,p){return o(),d("div",null,[...t[0]||(t[0]=[a('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/duckdb/functions/loadCSV.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/duckdb</a> / loadCSV</p><h1 id="function-loadcsv" tabindex="-1">Function: loadCSV() <a class="header-anchor" href="#function-loadcsv" aria-label="Permalink to &quot;Function: loadCSV()&quot;">​</a></h1><blockquote><p><strong>loadCSV</strong>(<code>tableName</code>, <code>fileName</code>, <code>options</code>?): <code>string</code></p></blockquote><p>Load data from a CSV file into a DuckDB table</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>tableName</code></td><td><code>string</code></td><td>Name of the table to create</td></tr><tr><td><code>fileName</code></td><td><code>string</code></td><td>Path to the CSV file</td></tr><tr><td><code>options</code>?</td><td>{ <code>[key: string]</code>: <code>unknown</code>; <code>schema</code>: <code>string</code>; <code>select</code>: <code>string</code>[]; <code>where</code>: <code>string</code>; <code>view</code>: <code>boolean</code>; <code>temp</code>: <code>boolean</code>; <code>replace</code>: <code>boolean</code>; }</td><td>Load options</td></tr><tr><td><code>options.schema</code>?</td><td><code>string</code></td><td>-</td></tr><tr><td><code>options.select</code>?</td><td><code>string</code>[]</td><td>-</td></tr><tr><td><code>options.where</code>?</td><td><code>string</code></td><td>-</td></tr><tr><td><code>options.view</code>?</td><td><code>boolean</code></td><td>-</td></tr><tr><td><code>options.temp</code>?</td><td><code>boolean</code></td><td>-</td></tr><tr><td><code>options.replace</code>?</td><td><code>boolean</code></td><td>-</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>SQL query string to create the table</p>',10)])])}const m=e(c,[["render",r]]);export{u as __pageData,m as default};
