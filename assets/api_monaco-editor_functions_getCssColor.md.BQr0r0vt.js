import{_ as t,c as e,o as a,ag as r}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Function: getCssColor()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/monaco-editor/functions/getCssColor.html"}]]},"headers":[],"relativePath":"api/monaco-editor/functions/getCssColor.md","filePath":"api/monaco-editor/functions/getCssColor.md"}'),n={name:"api/monaco-editor/functions/getCssColor.md"};function s(i,o,d,c,l,u){return a(),e("div",null,[...o[0]||(o[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/monaco-editor/functions/getCssColor.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/monaco-editor</a> / getCssColor</p><h1 id="function-getcsscolor" tabindex="-1">Function: getCssColor() <a class="header-anchor" href="#function-getcsscolor" aria-label="Permalink to &quot;Function: getCssColor()&quot;">​</a></h1><blockquote><p><strong>getCssColor</strong>(<code>variableName</code>, <code>fallbackColor</code>): <code>string</code></p></blockquote><p>Safely gets a CSS variable and ensures it&#39;s in a format Monaco can use</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>variableName</code></td><td><code>string</code></td><td>CSS variable name (e.g. &#39;--background&#39;)</td></tr><tr><td><code>fallbackColor</code></td><td><code>string</code></td><td>Fallback color if the variable isn&#39;t found</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>A color string in a format Monaco can use (typically hex)</p>',10)])])}const p=t(n,[["render",s]]);export{m as __pageData,p as default};
