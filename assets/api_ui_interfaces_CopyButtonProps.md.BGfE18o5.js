import{_ as e,c as a,o as t,ag as r}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"Interface: CopyButtonProps","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/ui/interfaces/CopyButtonProps.html"}]]},"headers":[],"relativePath":"api/ui/interfaces/CopyButtonProps.md","filePath":"api/ui/interfaces/CopyButtonProps.md"}'),n={name:"api/ui/interfaces/CopyButtonProps.md"};function d(i,o,c,s,l,u){return t(),a("div",null,[...o[0]||(o[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/ui/interfaces/CopyButtonProps.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/ui</a> / CopyButtonProps</p><h1 id="interface-copybuttonprops" tabindex="-1">Interface: CopyButtonProps <a class="header-anchor" href="#interface-copybuttonprops" aria-label="Permalink to &quot;Interface: CopyButtonProps&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="text" tabindex="-1">text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;text&quot;">​</a></h3><blockquote><p><strong>text</strong>: <code>string</code></p></blockquote><hr><h3 id="variant" tabindex="-1">variant? <a class="header-anchor" href="#variant" aria-label="Permalink to &quot;variant?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>variant</strong>: <code>null</code> | <code>&quot;link&quot;</code> | <code>&quot;default&quot;</code> | <code>&quot;destructive&quot;</code> | <code>&quot;secondary&quot;</code> | <code>&quot;outline&quot;</code> | <code>&quot;ghost&quot;</code></p></blockquote><hr><h3 id="size" tabindex="-1">size? <a class="header-anchor" href="#size" aria-label="Permalink to &quot;size?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>size</strong>: <code>null</code> | <code>&quot;default&quot;</code> | <code>&quot;sm&quot;</code> | <code>&quot;lg&quot;</code> | <code>&quot;icon&quot;</code> | <code>&quot;xs&quot;</code></p></blockquote><hr><h3 id="classname" tabindex="-1">className? <a class="header-anchor" href="#classname" aria-label="Permalink to &quot;className?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>className</strong>: <code>string</code></p></blockquote><hr><h3 id="arialabel" tabindex="-1">ariaLabel? <a class="header-anchor" href="#arialabel" aria-label="Permalink to &quot;ariaLabel?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>ariaLabel</strong>: <code>string</code></p></blockquote><hr><h3 id="durationms" tabindex="-1">durationMs? <a class="header-anchor" href="#durationms" aria-label="Permalink to &quot;durationMs?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>durationMs</strong>: <code>number</code></p></blockquote><hr><h3 id="disabled" tabindex="-1">disabled? <a class="header-anchor" href="#disabled" aria-label="Permalink to &quot;disabled?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>disabled</strong>: <code>boolean</code></p></blockquote><hr><h3 id="oncopied" tabindex="-1">onCopied()? <a class="header-anchor" href="#oncopied" aria-label="Permalink to &quot;onCopied()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>onCopied</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',29)])])}const q=e(n,[["render",d]]);export{h as __pageData,q as default};
