import{_ as t,c as a,o as r,ag as o}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Interface: StoreApi<T>","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/room-shell/interfaces/StoreApi.html"}]]},"headers":[],"relativePath":"api/room-shell/interfaces/StoreApi.md","filePath":"api/room-shell/interfaces/StoreApi.md"}'),d={name:"api/room-shell/interfaces/StoreApi.md"};function c(i,e,s,n,l,h){return r(),a("div",null,[...e[0]||(e[0]=[o('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/room-shell/interfaces/StoreApi.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/room-shell</a> / StoreApi</p><h1 id="interface-storeapi-t" tabindex="-1">Interface: StoreApi&lt;T&gt; <a class="header-anchor" href="#interface-storeapi-t" aria-label="Permalink to &quot;Interface: StoreApi\\&lt;T\\&gt;&quot;">​</a></h1><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><code>T</code></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="setstate" tabindex="-1">setState() <a class="header-anchor" href="#setstate" aria-label="Permalink to &quot;setState()&quot;">​</a></h3><blockquote><p><strong>setState</strong>: (<code>partial</code>, <code>replace</code>?) =&gt; <code>void</code>(<code>state</code>, <code>replace</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>partial</code></td><td><code>T</code> | <code>Partial</code>&lt;<code>T</code>&gt; | (<code>state</code>) =&gt; <code>T</code> | <code>Partial</code>&lt;<code>T</code>&gt;</td></tr><tr><td><code>replace</code>?</td><td><code>false</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>state</code></td><td><code>T</code> | (<code>state</code>) =&gt; <code>T</code></td></tr><tr><td><code>replace</code></td><td><code>true</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="getstate" tabindex="-1">getState() <a class="header-anchor" href="#getstate" aria-label="Permalink to &quot;getState()&quot;">​</a></h3><blockquote><p><strong>getState</strong>: () =&gt; <code>T</code></p></blockquote><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><hr><h3 id="getinitialstate" tabindex="-1">getInitialState() <a class="header-anchor" href="#getinitialstate" aria-label="Permalink to &quot;getInitialState()&quot;">​</a></h3><blockquote><p><strong>getInitialState</strong>: () =&gt; <code>T</code></p></blockquote><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><hr><h3 id="subscribe" tabindex="-1">subscribe() <a class="header-anchor" href="#subscribe" aria-label="Permalink to &quot;subscribe()&quot;">​</a></h3><blockquote><p><strong>subscribe</strong>: (<code>listener</code>) =&gt; () =&gt; <code>void</code></p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>listener</code></td><td>(<code>state</code>, <code>prevState</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Function</code></p><h5 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p>',35)])])}const b=t(d,[["render",c]]);export{u as __pageData,b as default};
