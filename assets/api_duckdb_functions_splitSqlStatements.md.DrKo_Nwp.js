import{_ as e,c as a,o as n,ag as s}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Function: splitSqlStatements()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/duckdb/functions/splitSqlStatements.html"}]]},"headers":[],"relativePath":"api/duckdb/functions/splitSqlStatements.md","filePath":"api/duckdb/functions/splitSqlStatements.md"}'),i={name:"api/duckdb/functions/splitSqlStatements.md"};function o(r,t,l,d,c,p){return n(),a("div",null,[...t[0]||(t[0]=[s('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/duckdb/functions/splitSqlStatements.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/duckdb</a> / splitSqlStatements</p><h1 id="function-splitsqlstatements" tabindex="-1">Function: splitSqlStatements() <a class="header-anchor" href="#function-splitsqlstatements" aria-label="Permalink to &quot;Function: splitSqlStatements()&quot;">​</a></h1><blockquote><p><strong>splitSqlStatements</strong>(<code>input</code>): <code>string</code>[]</p></blockquote><p>Split a string with potentially multiple SQL queries (separated as usual by &#39;;&#39;) into an array of queries. This implementation:</p><ul><li>Handles single and double quoted strings with proper escaping</li><li>Removes all comments: line comments (--) and block comments (/* ... */)</li><li>Ignores semicolons in quoted strings and comments</li><li>Trims whitespace from queries</li><li>Handles SQL-style escaped quotes (&#39;&#39; inside strings)</li><li>Returns only non-empty queries</li></ul><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>input</code></td><td><code>string</code></td><td>The SQL string containing one or more statements</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code>[]</p><p>An array of SQL statements with all comments removed</p>',11)])])}const h=e(i,[["render",o]]);export{u as __pageData,h as default};
