import{_ as t,c as a,o,ag as d}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Function: ColumnTypeBadge()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/data-table/functions/ColumnTypeBadge.html"}]]},"headers":[],"relativePath":"api/data-table/functions/ColumnTypeBadge.md","filePath":"api/data-table/functions/ColumnTypeBadge.md"}'),n={name:"api/data-table/functions/ColumnTypeBadge.md"};function r(c,e,l,p,s,i){return o(),a("div",null,[...e[0]||(e[0]=[d('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/data-table/functions/ColumnTypeBadge.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/data-table</a> / ColumnTypeBadge</p><h1 id="function-columntypebadge" tabindex="-1">Function: ColumnTypeBadge() <a class="header-anchor" href="#function-columntypebadge" aria-label="Permalink to &quot;Function: ColumnTypeBadge()&quot;">​</a></h1><blockquote><p><strong>ColumnTypeBadge</strong>(<code>props</code>): <code>ReactNode</code> | <code>Promise</code>&lt;<code>ReactNode</code>&gt;</p></blockquote><p>∏ A badge that displays the type of a database table column.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>props</code></td><td>{ <code>className</code>: <code>string</code>; <code>columnType</code>: <code>unknown</code>; <code>typeCategory</code>: <code>ColumnTypeCategory</code>; }</td></tr><tr><td><code>props.className</code>?</td><td><code>string</code></td></tr><tr><td><code>props.columnType</code></td><td><code>unknown</code></td></tr><tr><td><code>props.typeCategory</code>?</td><td><code>ColumnTypeCategory</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>ReactNode</code> | <code>Promise</code>&lt;<code>ReactNode</code>&gt;</p>',9)])])}const h=t(n,[["render",r]]);export{m as __pageData,h as default};
