import{_ as o,c as d,o as t,ag as a}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Type Alias: AiSettingsSliceState","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/ai/type-aliases/AiSettingsSliceState.html"}]]},"headers":[],"relativePath":"api/ai/type-aliases/AiSettingsSliceState.md","filePath":"api/ai/type-aliases/AiSettingsSliceState.md"}'),i={name:"api/ai/type-aliases/AiSettingsSliceState.md"};function c(r,e,s,l,n,p){return t(),d("div",null,[...e[0]||(e[0]=[a('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/ai/type-aliases/AiSettingsSliceState.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/ai</a> / AiSettingsSliceState</p><h1 id="type-alias-aisettingsslicestate" tabindex="-1">Type Alias: AiSettingsSliceState <a class="header-anchor" href="#type-alias-aisettingsslicestate" aria-label="Permalink to &quot;Type Alias: AiSettingsSliceState&quot;">​</a></h1><blockquote><p><strong>AiSettingsSliceState</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="aisettings"></a> <code>aiSettings</code></td><td>{ <code>config</code>: <a href="./AiSettingsSliceConfig.html"><code>AiSettingsSliceConfig</code></a>; <code>setMaxSteps</code>: (<code>maxSteps</code>) =&gt; <code>void</code>; <code>setAdditionalInstruction</code>: (<code>additionalInstruction</code>) =&gt; <code>void</code>; <code>updateProvider</code>: (<code>provider</code>, <code>updates</code>) =&gt; <code>void</code>; <code>addProvider</code>: (<code>provider</code>, <code>baseUrl</code>, <code>apiKey</code>) =&gt; <code>void</code>; <code>addModelToProvider</code>: (<code>provider</code>, <code>modelName</code>) =&gt; <code>void</code>; <code>removeModelFromProvider</code>: (<code>provider</code>, <code>modelName</code>) =&gt; <code>void</code>; <code>removeProvider</code>: (<code>provider</code>) =&gt; <code>void</code>; <code>addCustomModel</code>: (<code>baseUrl</code>, <code>apiKey</code>, <code>modelName</code>) =&gt; <code>void</code>; <code>updateCustomModel</code>: (<code>oldModelName</code>, <code>baseUrl</code>, <code>apiKey</code>, <code>newModelName</code>) =&gt; <code>void</code>; <code>removeCustomModel</code>: (<code>modelName</code>) =&gt; <code>void</code>; }</td></tr></tbody></table>',6)])])}const g=o(i,[["render",c]]);export{m as __pageData,g as default};
