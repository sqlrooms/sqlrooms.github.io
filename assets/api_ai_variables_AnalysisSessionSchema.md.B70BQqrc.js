import{_ as e,c as d,o as c,ag as t}from"./chunks/framework.B-XtCDNB.js";const Z=JSON.parse('{"title":"Variable: AnalysisSessionSchema","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/ai/variables/AnalysisSessionSchema.html"}]]},"headers":[],"relativePath":"api/ai/variables/AnalysisSessionSchema.md","filePath":"api/ai/variables/AnalysisSessionSchema.md"}'),a={name:"api/ai/variables/AnalysisSessionSchema.md"};function s(i,o,n,r,l,g){return c(),d("div",null,[...o[0]||(o[0]=[t('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/ai/variables/AnalysisSessionSchema.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/ai</a> / AnalysisSessionSchema</p><h1 id="variable-analysissessionschema" tabindex="-1">Variable: AnalysisSessionSchema <a class="header-anchor" href="#variable-analysissessionschema" aria-label="Permalink to &quot;Variable: AnalysisSessionSchema&quot;">â€‹</a></h1><blockquote><p><code>const</code> <strong>AnalysisSessionSchema</strong>: <code>z.ZodPipe</code>&lt;<code>z.ZodTransform</code>&lt;<code>unknown</code>, <code>unknown</code>&gt;, <code>z.ZodObject</code>&lt;{ <code>id</code>: <code>z.ZodString</code>; <code>name</code>: <code>z.ZodString</code>; <code>modelProvider</code>: <code>z.ZodString</code>; <code>model</code>: <code>z.ZodString</code>; <code>customModelName</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodString</code>&gt;; <code>baseUrl</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodString</code>&gt;; <code>analysisResults</code>: <code>z.ZodArray</code>&lt;<code>z.ZodObject</code>&lt;{ <code>id</code>: <code>z.ZodString</code>; <code>prompt</code>: <code>z.ZodString</code>; <code>errorMessage</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodObject</code>&lt;{ <code>error</code>: <code>z.ZodString</code>; }, <code>z.core.$strip</code>&gt;&gt;; <code>isCompleted</code>: <code>z.ZodBoolean</code>; }, <code>z.core.$strip</code>&gt;&gt;; <code>createdAt</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodCoercedDate</code>&lt;<code>unknown</code>&gt;&gt;; <code>uiMessages</code>: <code>z.ZodArray</code>&lt;<code>z.ZodObject</code>&lt;{ <code>id</code>: <code>z.ZodString</code>; <code>role</code>: <code>z.ZodEnum</code>&lt;{ <code>system</code>: <code>&quot;system&quot;</code>; <code>user</code>: <code>&quot;user&quot;</code>; <code>assistant</code>: <code>&quot;assistant&quot;</code>; }&gt;; <code>metadata</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodUnknown</code>&gt;; <code>parts</code>: <code>z.ZodArray</code>&lt;<code>z.ZodUnion</code>&lt;readonly [<code>z.ZodObject</code>&lt;..., ...&gt;, <code>z.ZodObject</code>&lt;..., ...&gt;, <code>z.ZodUnion</code>&lt;...&gt;, <code>z.ZodUnion</code>&lt;...&gt;, <code>z.ZodObject</code>&lt;..., ...&gt;, <code>z.ZodObject</code>&lt;..., ...&gt;, <code>z.ZodObject</code>&lt;..., ...&gt;, <code>z.ZodObject</code>&lt;..., ...&gt;, <code>z.ZodObject</code>&lt;..., ...&gt;]&gt;&gt;; }, <code>z.core.$strip</code>&gt;&gt;; <code>toolAdditionalData</code>: <code>z.ZodOptional</code>&lt;<code>z.ZodRecord</code>&lt;<code>z.ZodString</code>, <code>z.ZodUnknown</code>&gt;&gt;; <code>messagesRevision</code>: <code>z.ZodDefault</code>&lt;<code>z.ZodOptional</code>&lt;<code>z.ZodNumber</code>&gt;&gt;; }, <code>z.core.$strip</code>&gt;&gt;</p></blockquote>',4)])])}const m=e(a,[["render",s]]);export{Z as __pageData,m as default};
