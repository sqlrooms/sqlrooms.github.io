import{_ as s,c as e,o as a,ag as i}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Function: useStoreWithCosmos()","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/cosmos/functions/useStoreWithCosmos.html"}]]},"headers":[],"relativePath":"api/cosmos/functions/useStoreWithCosmos.md","filePath":"api/cosmos/functions/useStoreWithCosmos.md"}'),o={name:"api/cosmos/functions/useStoreWithCosmos.md"};function r(n,t,h,d,p,l){return a(),e("div",null,[...t[0]||(t[0]=[i(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/cosmos/functions/useStoreWithCosmos.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/cosmos</a> / useStoreWithCosmos</p><h1 id="function-usestorewithcosmos" tabindex="-1">Function: useStoreWithCosmos() <a class="header-anchor" href="#function-usestorewithcosmos" aria-label="Permalink to &quot;Function: useStoreWithCosmos()&quot;">​</a></h1><blockquote><p><strong>useStoreWithCosmos</strong>&lt;<code>T</code>&gt;(<code>selector</code>): <code>T</code></p></blockquote><p>Hook to access the Cosmos store with proper typing. Provides type-safe access to the combined room and Cosmos state.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>T</code></td><td>The type of the selected state slice</td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>selector</code></td><td>(<code>state</code>) =&gt; <code>T</code></td><td>A function that selects a portion of the state</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code></p><p>The selected state portion</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> graph</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useStoreWithCosmos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.cosmos.graph);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isRunning</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useStoreWithCosmos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.cosmos.isSimulationRunning);</span></span></code></pre></div>`,14)])])}const k=s(o,[["render",r]]);export{m as __pageData,k as default};
