import{_ as o,c as a,o as t,ag as r}from"./chunks/framework.B-XtCDNB.js";const m=JSON.parse('{"title":"Interface: MonacoLoaderOptions","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/monaco-editor/interfaces/MonacoLoaderOptions.html"}]]},"headers":[],"relativePath":"api/monaco-editor/interfaces/MonacoLoaderOptions.md","filePath":"api/monaco-editor/interfaces/MonacoLoaderOptions.md"}'),n={name:"api/monaco-editor/interfaces/MonacoLoaderOptions.md"};function d(i,e,c,s,l,h){return t(),a("div",null,[...e[0]||(e[0]=[r('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/monaco-editor/interfaces/MonacoLoaderOptions.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/monaco-editor</a> / MonacoLoaderOptions</p><h1 id="interface-monacoloaderoptions" tabindex="-1">Interface: MonacoLoaderOptions <a class="header-anchor" href="#interface-monacoloaderoptions" aria-label="Permalink to &quot;Interface: MonacoLoaderOptions&quot;">​</a></h1><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./../type-aliases/LoaderConfig.html"><code>LoaderConfig</code></a></li></ul><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="paths" tabindex="-1">paths? <a class="header-anchor" href="#paths" aria-label="Permalink to &quot;paths?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>paths</strong>: <code>object</code></p></blockquote><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><code>vs</code>?</td><td><code>string</code></td></tr></tbody></table><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>LoaderConfig.paths</code></p><hr><h3 id="vs-nls" tabindex="-1">vs/nls? <a class="header-anchor" href="#vs-nls" aria-label="Permalink to &quot;vs/nls?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>vs/nls</strong>: <code>object</code></p></blockquote><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><code>availableLanguages</code>?</td><td><code>object</code></td></tr></tbody></table><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><code>LoaderConfig.vs/nls</code></p><hr><h3 id="monaco" tabindex="-1">monaco? <a class="header-anchor" href="#monaco" aria-label="Permalink to &quot;monaco?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>monaco</strong>: <code>any</code></p></blockquote><p>Pass the Monaco instance to bundle the editor instead of using a CDN</p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><code>LoaderConfig.monaco</code></p><hr><h3 id="workers" tabindex="-1">workers? <a class="header-anchor" href="#workers" aria-label="Permalink to &quot;workers?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>workers</strong>: <a href="./LoaderWorkers.html"><code>LoaderWorkers</code></a></p></blockquote><p>Provide worker constructors mapped by label to automatically set <code>self.MonacoEnvironment.getWorker</code></p>',27)])])}const f=o(n,[["render",d]]);export{m as __pageData,f as default};
