import{_ as o,c as d,o as t,ag as c}from"./chunks/framework.B-XtCDNB.js";const S=JSON.parse('{"title":"Type Alias: SqlEditorSliceState","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://sqlrooms.org/api/sql-editor/type-aliases/SqlEditorSliceState.html"}]]},"headers":[],"relativePath":"api/sql-editor/type-aliases/SqlEditorSliceState.md","filePath":"api/sql-editor/type-aliases/SqlEditorSliceState.md"}'),a={name:"api/sql-editor/type-aliases/SqlEditorSliceState.md"};function r(i,e,l,s,n,u){return t(),d("div",null,[...e[0]||(e[0]=[c('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /api/sql-editor/type-aliases/SqlEditorSliceState.md for this page in Markdown format</div><p><a href="./../">@sqlrooms/sql-editor</a> / SqlEditorSliceState</p><h1 id="type-alias-sqleditorslicestate" tabindex="-1">Type Alias: SqlEditorSliceState <a class="header-anchor" href="#type-alias-sqleditorslicestate" aria-label="Permalink to &quot;Type Alias: SqlEditorSliceState&quot;">​</a></h1><blockquote><p><strong>SqlEditorSliceState</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th></tr></thead><tbody><tr><td><a id="sqleditor"></a> <code>sqlEditor</code></td><td>{ <code>queryResult</code>: <a href="./QueryResult.html"><code>QueryResult</code></a>; <code>selectedTable</code>: <code>string</code>; <code>isTablesLoading</code>: <code>boolean</code>; <code>tablesError</code>: <code>string</code>; <code>queryResultLimit</code>: <code>number</code>; <code>queryResultLimitOptions</code>: <code>number</code>[]; <code>parseAndRunQuery</code>: <code>Promise</code>&lt;<code>void</code>&gt;; <code>parseAndRunCurrentQuery</code>: <code>Promise</code>&lt;<code>void</code>&gt;; <code>abortCurrentQuery</code>: <code>void</code>; <code>exportResultsToCsv</code>: <code>void</code>; <code>createQueryTab</code>: { <code>id</code>: <code>string</code>; <code>name</code>: <code>string</code>; <code>query</code>: <code>string</code>; }; <code>deleteQueryTab</code>: <code>void</code>; <code>renameQueryTab</code>: <code>void</code>; <code>updateQueryText</code>: <code>void</code>; <code>setSelectedQueryId</code>: <code>void</code>; <code>getCurrentQuery</code>: <code>string</code>; <code>selectTable</code>: <code>void</code>; <code>clearQueryResults</code>: <code>void</code>; <code>setQueryResultLimit</code>: <code>void</code>; }</td></tr></tbody></table>',6)])])}const y=o(a,[["render",r]]);export{S as __pageData,y as default};
